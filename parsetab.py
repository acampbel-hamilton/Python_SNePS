
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'And AndImpl AndOr Close Comma DoubImpl Every Identifier Impl Integer LBrace LBracket LParen Nand None Nor Not Or OrImpl QIdentifier RBrace RBracket RParen SetOf Some String Thnor Thnot Thresh WftNode Xor\n    Wft :               FWft\n        |               OWft\n    \n    FWft :              AtomicWft\n         |              Y_WftNode\n         |              Function\n         |              Param1Op\n    \n    OWft :              BinaryOp\n         |              NaryOp\n         |              Param2Op\n         |              CloseStmt\n         |              EveryStmt\n         |              SomeStmt\n         |              QIdenStmt\n\n    \n    BinaryOp :          Y_Impl LParen Argument Comma Argument RParen\n             |          Y_OrImpl LParen Argument Comma Argument RParen\n             |          Y_AndImpl LParen Argument Comma Argument RParen\n    \n    NaryOp :            Y_And LParen Wfts RParen\n           |            Y_Or LParen Wfts RParen\n           |            Y_Not LParen Wfts RParen\n           |            Y_Nor LParen Wfts RParen\n           |            Y_Thnot LParen Wfts RParen\n           |            Y_Thnor LParen Wfts RParen\n           |            Y_Nand LParen Wfts RParen\n           |            Y_Xor LParen Wfts RParen\n           |            Y_DoubImpl LParen Wfts RParen\n           |            Y_And LParen RParen\n           |            Y_Or LParen RParen\n           |            Y_Not LParen RParen\n           |            Y_Nor LParen RParen\n           |            Y_Thnot LParen RParen\n           |            Y_Thnor LParen RParen\n           |            Y_Nand LParen RParen\n           |            Y_Xor LParen RParen\n           |            Y_DoubImpl LParen RParen\n    \n    Param2Op :          Y_AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen\n             |          Y_Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen\n    \n    Param1Op :          Y_Thresh LBrace Integer RBrace LParen Wfts RParen\n    \n    EveryStmt :         Y_Every LBrace AtomicName RBrace LParen Wfts RParen\n              |         Y_Every LBrace AtomicName RBrace LParen RParen\n    \n    SomeStmt :          Y_Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen\n             |          Y_Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen\n    \n    CloseStmt :         Y_Close LParen AtomicNameSet Comma Wft RParen\n    \n    AtomicWft :         Y_Identifier\n              |         Y_String\n              |         Y_Integer\n    \n    Function :          FWft LParen Arguments RParen\n    \n    QIdenStmt :         Y_QIdentifier LParen Wfts RParen\n              |         Y_QIdentifier LParen RParen\n    \n    Argument :          Wft\n             |          Y_None\n             |          ArgumentFunction\n             |          LBracket Wfts RBracket\n             |          LBracket RBracket\n    \n    ArgumentFunction :  Y_SetOf LParen Wfts RParen\n        |               Y_SetOf LParen RParen\n    \n    Wfts :              Wft\n         |              Wfts Comma Wft\n    \n    Arguments :         Argument\n              |         Arguments Comma Argument\n    \n    AtomicNameSet :     AtomicName\n                  |     LParen AtomicNames RParen\n    \n    AtomicNames :       AtomicName\n                |       AtomicNames Comma AtomicName\n    \n    AtomicName :        Y_Identifier\n    Y_Impl :         ImplY_Or :           OrY_Integer :      IntegerY_String :       StringY_Not :          NotY_Nor :          NorY_Thnot :        ThnotY_Thnor :        ThnorY_Nand :         NandY_Xor :          XorY_DoubImpl :     DoubImplY_AndOr :        AndOrY_Thresh :       ThreshY_SetOf :        SetOfY_Every :        EveryY_Some :         SomeY_Close :        CloseY_And :          AndY_WftNode :      WftNodeY_QIdentifier :  QIdentifierY_Identifier :   IdentifierY_None :   NoneY_OrImpl :   OrImplY_AndImpl :   AndImpl'
    
_lr_action_items = {'WftNode':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'Identifier':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,82,110,119,122,125,126,127,129,141,143,149,157,159,174,175,180,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'String':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'Integer':([0,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,82,119,122,124,125,126,127,129,138,141,149,159,174,175,180,],[20,20,86,20,20,20,20,20,20,20,20,20,20,20,20,109,20,20,20,20,150,20,20,20,20,155,20,20,20,20,20,20,]),'Thresh':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'Impl':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'OrImpl':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'AndImpl':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'And':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'Or':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'Not':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'Nor':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'Thnot':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'Thnor':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'Nand':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'Xor':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'DoubImpl':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'AndOr':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'Close':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'Every':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'Some':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'QIdentifier':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,38,39,91,94,96,98,100,102,104,106,108,117,118,128,130,131,132,133,134,135,136,137,144,164,165,166,169,171,173,176,181,182,183,185,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-43,-44,-45,-83,-67,-85,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-48,-46,-17,-18,-19,-20,-21,-22,-23,-24,-25,-47,-14,-15,-16,-42,-39,-37,-38,-36,-35,-41,-40,]),'RParen':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,38,39,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,121,122,128,130,131,132,133,134,135,136,137,139,140,144,145,146,147,148,151,152,153,154,158,159,160,161,162,164,165,166,168,169,170,171,173,176,178,179,180,181,182,183,184,185,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-43,-44,-45,-83,-67,-85,-68,91,94,96,98,100,102,104,106,108,117,118,-58,-49,-50,-51,-86,128,-26,-56,130,-27,131,-28,132,-29,133,-30,134,-31,135,-32,136,-33,137,-34,-64,144,-48,-46,-53,148,-17,-18,-19,-20,-21,-22,-23,-24,-25,156,-62,-47,-59,-52,161,-55,164,165,166,-57,169,171,172,-54,173,-14,-15,-16,-63,-42,176,-39,-37,-38,181,182,183,-36,-35,-41,185,-40,]),'Comma':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,38,39,77,78,79,80,81,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,116,117,118,120,121,128,130,131,132,133,134,135,136,137,139,140,144,145,146,147,148,154,156,161,162,164,165,166,168,169,170,171,173,176,178,179,181,182,183,184,185,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-43,-44,-45,-83,-67,-85,-68,119,-58,-49,-50,-51,-86,124,125,126,127,129,-26,-56,129,-27,129,-28,129,-29,129,-30,129,-31,129,-32,129,-33,129,-34,138,141,-60,-64,129,-48,-46,129,-53,-17,-18,-19,-20,-21,-22,-23,-24,-25,157,-62,-47,-59,-52,129,-55,-57,-61,-54,129,-14,-15,-16,-63,-42,129,-39,-37,-38,129,129,-36,-35,-41,129,-40,]),'RBracket':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,38,39,82,91,92,94,96,98,100,102,104,106,108,117,118,120,128,130,131,132,133,134,135,136,137,144,154,164,165,166,169,171,173,176,181,182,183,185,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-43,-44,-45,-83,-67,-85,-68,121,-26,-56,-27,-28,-29,-30,-31,-32,-33,-34,-48,-46,146,-17,-18,-19,-20,-21,-22,-23,-24,-25,-47,-57,-14,-15,-16,-42,-39,-37,-38,-36,-35,-41,-40,]),'LParen':([2,4,5,6,7,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,34,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,54,57,73,84,85,113,115,118,123,142,163,167,173,177,],[58,-3,-4,-5,-6,-43,-44,-45,-83,-67,60,61,62,63,64,65,66,67,68,69,70,71,73,76,-85,-68,-65,-87,-88,-82,-66,-69,-70,-71,-72,-73,-74,-75,-81,-84,110,122,-78,-64,143,-46,149,159,174,175,-37,180,]),'LBrace':([19,33,35,36,40,53,55,56,],[59,72,74,75,-77,-76,-79,-80,]),'RBrace':([38,86,113,114,150,155,172,],[-85,123,-64,142,163,167,177,]),'LBracket':([58,60,61,62,119,125,126,127,],[82,82,82,82,82,82,82,82,]),'None':([58,60,61,62,119,125,126,127,],[83,83,83,83,83,83,83,83,]),'SetOf':([58,60,61,62,119,125,126,127,],[85,85,85,85,85,85,85,85,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Wft':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[1,79,79,79,79,92,92,92,92,92,92,92,92,92,92,92,79,92,79,79,79,154,158,92,92,92,92,92,]),'FWft':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'OWft':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'AtomicWft':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'Y_WftNode':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'Function':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'Param1Op':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'BinaryOp':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'NaryOp':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'Param2Op':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'CloseStmt':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'EveryStmt':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'SomeStmt':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'QIdenStmt':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'Y_Identifier':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,82,110,119,122,125,126,127,129,141,143,149,157,159,174,175,180,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,113,113,113,15,15,113,15,15,15,15,15,15,15,113,15,113,15,15,15,15,]),'Y_String':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'Y_Integer':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'Y_Thresh':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'Y_Impl':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'Y_OrImpl':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'Y_AndImpl':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'Y_And':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'Y_Or':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'Y_Not':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'Y_Nor':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'Y_Thnot':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'Y_Thnor':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'Y_Nand':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'Y_Xor':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'Y_DoubImpl':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'Y_AndOr':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'Y_Close':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'Y_Every':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'Y_Some':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'Y_QIdentifier':([0,58,60,61,62,63,64,65,66,67,68,69,70,71,76,82,119,122,125,126,127,129,141,149,159,174,175,180,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'Arguments':([58,],[77,]),'Argument':([58,60,61,62,119,125,126,127,],[78,87,88,89,145,151,152,153,]),'Y_None':([58,60,61,62,119,125,126,127,],[80,80,80,80,80,80,80,80,]),'ArgumentFunction':([58,60,61,62,119,125,126,127,],[81,81,81,81,81,81,81,81,]),'Y_SetOf':([58,60,61,62,119,125,126,127,],[84,84,84,84,84,84,84,84,]),'Wfts':([63,64,65,66,67,68,69,70,71,76,82,122,149,159,174,175,180,],[90,93,95,97,99,101,103,105,107,116,120,147,162,170,178,179,184,]),'AtomicNameSet':([73,],[111,]),'AtomicName':([73,74,75,110,143,157,],[112,114,115,140,160,168,]),'AtomicNames':([110,],[139,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Wft","S'",1,None,None,None),
  ('Wft -> FWft','Wft',1,'p_Wft','WftParse.py',16),
  ('Wft -> OWft','Wft',1,'p_Wft','WftParse.py',17),
  ('FWft -> AtomicWft','FWft',1,'p_FWft','WftParse.py',27),
  ('FWft -> Y_WftNode','FWft',1,'p_FWft','WftParse.py',28),
  ('FWft -> Function','FWft',1,'p_FWft','WftParse.py',29),
  ('FWft -> Param1Op','FWft',1,'p_FWft','WftParse.py',30),
  ('OWft -> BinaryOp','OWft',1,'p_OWft','WftParse.py',38),
  ('OWft -> NaryOp','OWft',1,'p_OWft','WftParse.py',39),
  ('OWft -> Param2Op','OWft',1,'p_OWft','WftParse.py',40),
  ('OWft -> CloseStmt','OWft',1,'p_OWft','WftParse.py',41),
  ('OWft -> EveryStmt','OWft',1,'p_OWft','WftParse.py',42),
  ('OWft -> SomeStmt','OWft',1,'p_OWft','WftParse.py',43),
  ('OWft -> QIdenStmt','OWft',1,'p_OWft','WftParse.py',44),
  ('BinaryOp -> Y_Impl LParen Argument Comma Argument RParen','BinaryOp',6,'p_BinaryOp','WftParse.py',52),
  ('BinaryOp -> Y_OrImpl LParen Argument Comma Argument RParen','BinaryOp',6,'p_BinaryOp','WftParse.py',53),
  ('BinaryOp -> Y_AndImpl LParen Argument Comma Argument RParen','BinaryOp',6,'p_BinaryOp','WftParse.py',54),
  ('NaryOp -> Y_And LParen Wfts RParen','NaryOp',4,'p_NaryOp','WftParse.py',62),
  ('NaryOp -> Y_Or LParen Wfts RParen','NaryOp',4,'p_NaryOp','WftParse.py',63),
  ('NaryOp -> Y_Not LParen Wfts RParen','NaryOp',4,'p_NaryOp','WftParse.py',64),
  ('NaryOp -> Y_Nor LParen Wfts RParen','NaryOp',4,'p_NaryOp','WftParse.py',65),
  ('NaryOp -> Y_Thnot LParen Wfts RParen','NaryOp',4,'p_NaryOp','WftParse.py',66),
  ('NaryOp -> Y_Thnor LParen Wfts RParen','NaryOp',4,'p_NaryOp','WftParse.py',67),
  ('NaryOp -> Y_Nand LParen Wfts RParen','NaryOp',4,'p_NaryOp','WftParse.py',68),
  ('NaryOp -> Y_Xor LParen Wfts RParen','NaryOp',4,'p_NaryOp','WftParse.py',69),
  ('NaryOp -> Y_DoubImpl LParen Wfts RParen','NaryOp',4,'p_NaryOp','WftParse.py',70),
  ('NaryOp -> Y_And LParen RParen','NaryOp',3,'p_NaryOp','WftParse.py',71),
  ('NaryOp -> Y_Or LParen RParen','NaryOp',3,'p_NaryOp','WftParse.py',72),
  ('NaryOp -> Y_Not LParen RParen','NaryOp',3,'p_NaryOp','WftParse.py',73),
  ('NaryOp -> Y_Nor LParen RParen','NaryOp',3,'p_NaryOp','WftParse.py',74),
  ('NaryOp -> Y_Thnot LParen RParen','NaryOp',3,'p_NaryOp','WftParse.py',75),
  ('NaryOp -> Y_Thnor LParen RParen','NaryOp',3,'p_NaryOp','WftParse.py',76),
  ('NaryOp -> Y_Nand LParen RParen','NaryOp',3,'p_NaryOp','WftParse.py',77),
  ('NaryOp -> Y_Xor LParen RParen','NaryOp',3,'p_NaryOp','WftParse.py',78),
  ('NaryOp -> Y_DoubImpl LParen RParen','NaryOp',3,'p_NaryOp','WftParse.py',79),
  ('Param2Op -> Y_AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen','Param2Op',9,'p_Param2Op','WftParse.py',88),
  ('Param2Op -> Y_Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen','Param2Op',9,'p_Param2Op','WftParse.py',89),
  ('Param1Op -> Y_Thresh LBrace Integer RBrace LParen Wfts RParen','Param1Op',7,'p_Param1Op','WftParse.py',98),
  ('EveryStmt -> Y_Every LBrace AtomicName RBrace LParen Wfts RParen','EveryStmt',7,'p_EveryStmt','WftParse.py',107),
  ('EveryStmt -> Y_Every LBrace AtomicName RBrace LParen RParen','EveryStmt',6,'p_EveryStmt','WftParse.py',108),
  ('SomeStmt -> Y_Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen','SomeStmt',10,'p_SomeStmt','WftParse.py',120),
  ('SomeStmt -> Y_Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen','SomeStmt',9,'p_SomeStmt','WftParse.py',121),
  ('CloseStmt -> Y_Close LParen AtomicNameSet Comma Wft RParen','CloseStmt',6,'p_CloseStmt','WftParse.py',133),
  ('AtomicWft -> Y_Identifier','AtomicWft',1,'p_AtomicWft','WftParse.py',141),
  ('AtomicWft -> Y_String','AtomicWft',1,'p_AtomicWft','WftParse.py',142),
  ('AtomicWft -> Y_Integer','AtomicWft',1,'p_AtomicWft','WftParse.py',143),
  ('Function -> FWft LParen Arguments RParen','Function',4,'p_Function','WftParse.py',150),
  ('QIdenStmt -> Y_QIdentifier LParen Wfts RParen','QIdenStmt',4,'p_QIdenStmt','WftParse.py',160),
  ('QIdenStmt -> Y_QIdentifier LParen RParen','QIdenStmt',3,'p_QIdenStmt','WftParse.py',161),
  ('Argument -> Wft','Argument',1,'p_Argument','WftParse.py',170),
  ('Argument -> Y_None','Argument',1,'p_Argument','WftParse.py',171),
  ('Argument -> ArgumentFunction','Argument',1,'p_Argument','WftParse.py',172),
  ('Argument -> LBracket Wfts RBracket','Argument',3,'p_Argument','WftParse.py',173),
  ('Argument -> LBracket RBracket','Argument',2,'p_Argument','WftParse.py',174),
  ('ArgumentFunction -> Y_SetOf LParen Wfts RParen','ArgumentFunction',4,'p_ArgumentFunction','WftParse.py',189),
  ('ArgumentFunction -> Y_SetOf LParen RParen','ArgumentFunction',3,'p_ArgumentFunction','WftParse.py',190),
  ('Wfts -> Wft','Wfts',1,'p_Wfts','WftParse.py',201),
  ('Wfts -> Wfts Comma Wft','Wfts',3,'p_Wfts','WftParse.py',202),
  ('Arguments -> Argument','Arguments',1,'p_Arguments','WftParse.py',211),
  ('Arguments -> Arguments Comma Argument','Arguments',3,'p_Arguments','WftParse.py',212),
  ('AtomicNameSet -> AtomicName','AtomicNameSet',1,'p_AtomicNameSet','WftParse.py',221),
  ('AtomicNameSet -> LParen AtomicNames RParen','AtomicNameSet',3,'p_AtomicNameSet','WftParse.py',222),
  ('AtomicNames -> AtomicName','AtomicNames',1,'p_AtomicNames','WftParse.py',232),
  ('AtomicNames -> AtomicNames Comma AtomicName','AtomicNames',3,'p_AtomicNames','WftParse.py',233),
  ('AtomicName -> Y_Identifier','AtomicName',1,'p_AtomicName','WftParse.py',242),
  ('Y_Impl -> Impl','Y_Impl',1,'p_Y_Impl','WftParse.py',251),
  ('Y_Or -> Or','Y_Or',1,'p_Y_Or','WftParse.py',255),
  ('Y_Integer -> Integer','Y_Integer',1,'p_Y_Integer','WftParse.py',259),
  ('Y_String -> String','Y_String',1,'p_Y_String','WftParse.py',263),
  ('Y_Not -> Not','Y_Not',1,'p_Y_Not','WftParse.py',267),
  ('Y_Nor -> Nor','Y_Nor',1,'p_Y_Nor','WftParse.py',271),
  ('Y_Thnot -> Thnot','Y_Thnot',1,'p_Y_Thnot','WftParse.py',275),
  ('Y_Thnor -> Thnor','Y_Thnor',1,'p_Y_Thnor','WftParse.py',279),
  ('Y_Nand -> Nand','Y_Nand',1,'p_Y_Nand','WftParse.py',283),
  ('Y_Xor -> Xor','Y_Xor',1,'p_Y_Xor','WftParse.py',287),
  ('Y_DoubImpl -> DoubImpl','Y_DoubImpl',1,'p_Y_DoubImpl','WftParse.py',291),
  ('Y_AndOr -> AndOr','Y_AndOr',1,'p_Y_AndOr','WftParse.py',295),
  ('Y_Thresh -> Thresh','Y_Thresh',1,'p_Y_Thresh','WftParse.py',299),
  ('Y_SetOf -> SetOf','Y_SetOf',1,'p_Y_SetOf','WftParse.py',303),
  ('Y_Every -> Every','Y_Every',1,'p_Y_Every','WftParse.py',307),
  ('Y_Some -> Some','Y_Some',1,'p_Y_Some','WftParse.py',311),
  ('Y_Close -> Close','Y_Close',1,'p_Y_Close','WftParse.py',315),
  ('Y_And -> And','Y_And',1,'p_Y_And','WftParse.py',319),
  ('Y_WftNode -> WftNode','Y_WftNode',1,'p_Y_WftNode','WftParse.py',323),
  ('Y_QIdentifier -> QIdentifier','Y_QIdentifier',1,'p_Y_QIdentifier','WftParse.py',327),
  ('Y_Identifier -> Identifier','Y_Identifier',1,'p_Y_Identifier','WftParse.py',331),
  ('Y_None -> None','Y_None',1,'p_Y_None','WftParse.py',335),
  ('Y_OrImpl -> OrImpl','Y_OrImpl',1,'p_Y_OrImpl','WftParse.py',339),
  ('Y_AndImpl -> AndImpl','Y_AndImpl',1,'p_Y_AndImpl','WftParse.py',343),
]
