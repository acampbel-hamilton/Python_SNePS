Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Wft
Rule 1     Wft -> FWft
Rule 2     Wft -> OWft
Rule 3     FWft -> AtomicName
Rule 4     FWft -> Y_WftNode
Rule 5     FWft -> Function
Rule 6     OWft -> BinaryOp
Rule 7     OWft -> NaryOp
Rule 8     OWft -> MinMaxOp
Rule 9     OWft -> CloseStmt
Rule 10    OWft -> EveryStmt
Rule 11    OWft -> SomeStmt
Rule 12    OWft -> QIdenStmt
Rule 13    BinaryOp -> Impl LParen Argument Comma Argument RParen
Rule 14    BinaryOp -> OrImpl LParen Argument Comma Argument RParen
Rule 15    BinaryOp -> AndImpl LParen Argument Comma Argument RParen
Rule 16    NaryOp -> And LParen Wfts RParen
Rule 17    NaryOp -> Or LParen Wfts RParen
Rule 18    NaryOp -> Not LParen Wfts RParen
Rule 19    NaryOp -> Nor LParen Wfts RParen
Rule 20    NaryOp -> Thnot LParen Wfts RParen
Rule 21    NaryOp -> Thnor LParen Wfts RParen
Rule 22    NaryOp -> Nand LParen Wfts RParen
Rule 23    NaryOp -> Xor LParen Wfts RParen
Rule 24    NaryOp -> DoubImpl LParen Wfts RParen
Rule 25    MinMaxOp -> AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
Rule 26    MinMaxOp -> Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
Rule 27    MinMaxOp -> Thresh LBrace Integer RBrace LParen Wfts RParen
Rule 28    EveryStmt -> Every LBrace AtomicName RBrace LParen Wfts RParen
Rule 29    EveryStmt -> Every LBrace AtomicName RBrace LParen RParen
Rule 30    SomeStmt -> Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
Rule 31    SomeStmt -> Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
Rule 32    CloseStmt -> Close LParen AtomicNameSet Comma Wft RParen
Rule 33    Function -> FWft LParen Arguments RParen
Rule 34    QIdenStmt -> QIdentifier LParen Wfts RParen
Rule 35    QIdenStmt -> QIdentifier LParen RParen
Rule 36    Argument -> Wft
Rule 37    Argument -> None
Rule 38    Argument -> ArgumentFunction
Rule 39    Argument -> LBracket RBracket
Rule 40    Argument -> LBracket Wfts RBracket
Rule 41    ArgumentFunction -> SetOf LParen RParen
Rule 42    ArgumentFunction -> SetOf LParen Wfts RParen
Rule 43    Wfts -> Wft
Rule 44    Wfts -> Wfts Comma Wft
Rule 45    Arguments -> Argument
Rule 46    Arguments -> Arguments Comma Argument
Rule 47    AtomicNameSet -> AtomicName
Rule 48    AtomicNameSet -> LParen AtomicNames RParen
Rule 49    AtomicNames -> AtomicName
Rule 50    AtomicNames -> AtomicNames Comma AtomicName
Rule 51    AtomicName -> Identifier
Rule 52    AtomicName -> Integer
Rule 53    Y_WftNode -> WftNode

Terminals, with rules where they appear

And                  : 16
AndImpl              : 15
AndOr                : 25
Close                : 32
Comma                : 13 14 15 25 26 32 44 46 50
DoubImpl             : 24
Every                : 28 29
Identifier           : 51
Impl                 : 13
Integer              : 25 25 26 26 27 52
LBrace               : 25 26 27 28 29 30 31
LBracket             : 39 40
LParen               : 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 30 31 31 32 33 34 35 41 42 48
Nand                 : 22
None                 : 37
Nor                  : 19
Not                  : 18
Or                   : 17
OrImpl               : 14
QIdentifier          : 34 35
RBrace               : 25 26 27 28 29 30 31
RBracket             : 39 40
RParen               : 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 30 31 31 32 33 34 35 41 42 48
SetOf                : 41 42
Some                 : 30 31
Thnor                : 21
Thnot                : 20
Thresh               : 26 27
WftNode              : 53
Xor                  : 23
error                : 

Nonterminals, with rules where they appear

Argument             : 13 13 14 14 15 15 45 46
ArgumentFunction     : 38
Arguments            : 33 46
AtomicName           : 3 28 29 30 30 31 31 47 49 50
AtomicNameSet        : 32
AtomicNames          : 48 50
BinaryOp             : 6
CloseStmt            : 9
EveryStmt            : 10
FWft                 : 1 33
Function             : 5
MinMaxOp             : 8
NaryOp               : 7
OWft                 : 2
QIdenStmt            : 12
SomeStmt             : 11
Wft                  : 32 36 43 44 0
Wfts                 : 16 17 18 19 20 21 22 23 24 25 26 27 28 30 34 40 42 44
Y_WftNode            : 4

Parsing method: LALR

state 0

    (0) S' -> . Wft
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Wft                            shift and go to state 1
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 1

    (0) S' -> Wft .



state 2

    (1) Wft -> FWft .
    (33) Function -> FWft . LParen Arguments RParen

    $end            reduce using rule 1 (Wft -> FWft .)
    RParen          reduce using rule 1 (Wft -> FWft .)
    Comma           reduce using rule 1 (Wft -> FWft .)
    RBracket        reduce using rule 1 (Wft -> FWft .)
    LParen          shift and go to state 35


state 3

    (2) Wft -> OWft .

    $end            reduce using rule 2 (Wft -> OWft .)
    RParen          reduce using rule 2 (Wft -> OWft .)
    Comma           reduce using rule 2 (Wft -> OWft .)
    RBracket        reduce using rule 2 (Wft -> OWft .)


state 4

    (3) FWft -> AtomicName .

    LParen          reduce using rule 3 (FWft -> AtomicName .)
    $end            reduce using rule 3 (FWft -> AtomicName .)
    RParen          reduce using rule 3 (FWft -> AtomicName .)
    Comma           reduce using rule 3 (FWft -> AtomicName .)
    RBracket        reduce using rule 3 (FWft -> AtomicName .)


state 5

    (4) FWft -> Y_WftNode .

    LParen          reduce using rule 4 (FWft -> Y_WftNode .)
    $end            reduce using rule 4 (FWft -> Y_WftNode .)
    RParen          reduce using rule 4 (FWft -> Y_WftNode .)
    Comma           reduce using rule 4 (FWft -> Y_WftNode .)
    RBracket        reduce using rule 4 (FWft -> Y_WftNode .)


state 6

    (5) FWft -> Function .

    LParen          reduce using rule 5 (FWft -> Function .)
    $end            reduce using rule 5 (FWft -> Function .)
    RParen          reduce using rule 5 (FWft -> Function .)
    Comma           reduce using rule 5 (FWft -> Function .)
    RBracket        reduce using rule 5 (FWft -> Function .)


state 7

    (6) OWft -> BinaryOp .

    $end            reduce using rule 6 (OWft -> BinaryOp .)
    RParen          reduce using rule 6 (OWft -> BinaryOp .)
    Comma           reduce using rule 6 (OWft -> BinaryOp .)
    RBracket        reduce using rule 6 (OWft -> BinaryOp .)


state 8

    (7) OWft -> NaryOp .

    $end            reduce using rule 7 (OWft -> NaryOp .)
    RParen          reduce using rule 7 (OWft -> NaryOp .)
    Comma           reduce using rule 7 (OWft -> NaryOp .)
    RBracket        reduce using rule 7 (OWft -> NaryOp .)


state 9

    (8) OWft -> MinMaxOp .

    $end            reduce using rule 8 (OWft -> MinMaxOp .)
    RParen          reduce using rule 8 (OWft -> MinMaxOp .)
    Comma           reduce using rule 8 (OWft -> MinMaxOp .)
    RBracket        reduce using rule 8 (OWft -> MinMaxOp .)


state 10

    (9) OWft -> CloseStmt .

    $end            reduce using rule 9 (OWft -> CloseStmt .)
    RParen          reduce using rule 9 (OWft -> CloseStmt .)
    Comma           reduce using rule 9 (OWft -> CloseStmt .)
    RBracket        reduce using rule 9 (OWft -> CloseStmt .)


state 11

    (10) OWft -> EveryStmt .

    $end            reduce using rule 10 (OWft -> EveryStmt .)
    RParen          reduce using rule 10 (OWft -> EveryStmt .)
    Comma           reduce using rule 10 (OWft -> EveryStmt .)
    RBracket        reduce using rule 10 (OWft -> EveryStmt .)


state 12

    (11) OWft -> SomeStmt .

    $end            reduce using rule 11 (OWft -> SomeStmt .)
    RParen          reduce using rule 11 (OWft -> SomeStmt .)
    Comma           reduce using rule 11 (OWft -> SomeStmt .)
    RBracket        reduce using rule 11 (OWft -> SomeStmt .)


state 13

    (12) OWft -> QIdenStmt .

    $end            reduce using rule 12 (OWft -> QIdenStmt .)
    RParen          reduce using rule 12 (OWft -> QIdenStmt .)
    Comma           reduce using rule 12 (OWft -> QIdenStmt .)
    RBracket        reduce using rule 12 (OWft -> QIdenStmt .)


state 14

    (51) AtomicName -> Identifier .

    LParen          reduce using rule 51 (AtomicName -> Identifier .)
    $end            reduce using rule 51 (AtomicName -> Identifier .)
    RParen          reduce using rule 51 (AtomicName -> Identifier .)
    Comma           reduce using rule 51 (AtomicName -> Identifier .)
    RBrace          reduce using rule 51 (AtomicName -> Identifier .)
    RBracket        reduce using rule 51 (AtomicName -> Identifier .)


state 15

    (52) AtomicName -> Integer .

    LParen          reduce using rule 52 (AtomicName -> Integer .)
    $end            reduce using rule 52 (AtomicName -> Integer .)
    RParen          reduce using rule 52 (AtomicName -> Integer .)
    Comma           reduce using rule 52 (AtomicName -> Integer .)
    RBrace          reduce using rule 52 (AtomicName -> Integer .)
    RBracket        reduce using rule 52 (AtomicName -> Integer .)


state 16

    (53) Y_WftNode -> WftNode .

    LParen          reduce using rule 53 (Y_WftNode -> WftNode .)
    $end            reduce using rule 53 (Y_WftNode -> WftNode .)
    RParen          reduce using rule 53 (Y_WftNode -> WftNode .)
    Comma           reduce using rule 53 (Y_WftNode -> WftNode .)
    RBracket        reduce using rule 53 (Y_WftNode -> WftNode .)


state 17

    (13) BinaryOp -> Impl . LParen Argument Comma Argument RParen

    LParen          shift and go to state 36


state 18

    (14) BinaryOp -> OrImpl . LParen Argument Comma Argument RParen

    LParen          shift and go to state 37


state 19

    (15) BinaryOp -> AndImpl . LParen Argument Comma Argument RParen

    LParen          shift and go to state 38


state 20

    (16) NaryOp -> And . LParen Wfts RParen

    LParen          shift and go to state 39


state 21

    (17) NaryOp -> Or . LParen Wfts RParen

    LParen          shift and go to state 40


state 22

    (18) NaryOp -> Not . LParen Wfts RParen

    LParen          shift and go to state 41


state 23

    (19) NaryOp -> Nor . LParen Wfts RParen

    LParen          shift and go to state 42


state 24

    (20) NaryOp -> Thnot . LParen Wfts RParen

    LParen          shift and go to state 43


state 25

    (21) NaryOp -> Thnor . LParen Wfts RParen

    LParen          shift and go to state 44


state 26

    (22) NaryOp -> Nand . LParen Wfts RParen

    LParen          shift and go to state 45


state 27

    (23) NaryOp -> Xor . LParen Wfts RParen

    LParen          shift and go to state 46


state 28

    (24) NaryOp -> DoubImpl . LParen Wfts RParen

    LParen          shift and go to state 47


state 29

    (25) MinMaxOp -> AndOr . LBrace Integer Comma Integer RBrace LParen Wfts RParen

    LBrace          shift and go to state 48


state 30

    (26) MinMaxOp -> Thresh . LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> Thresh . LBrace Integer RBrace LParen Wfts RParen

    LBrace          shift and go to state 49


state 31

    (32) CloseStmt -> Close . LParen AtomicNameSet Comma Wft RParen

    LParen          shift and go to state 50


state 32

    (28) EveryStmt -> Every . LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> Every . LBrace AtomicName RBrace LParen RParen

    LBrace          shift and go to state 51


state 33

    (30) SomeStmt -> Some . LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> Some . LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen

    LBrace          shift and go to state 52


state 34

    (34) QIdenStmt -> QIdentifier . LParen Wfts RParen
    (35) QIdenStmt -> QIdentifier . LParen RParen

    LParen          shift and go to state 53


state 35

    (33) Function -> FWft LParen . Arguments RParen
    (45) Arguments -> . Argument
    (46) Arguments -> . Arguments Comma Argument
    (36) Argument -> . Wft
    (37) Argument -> . None
    (38) Argument -> . ArgumentFunction
    (39) Argument -> . LBracket RBracket
    (40) Argument -> . LBracket Wfts RBracket
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (41) ArgumentFunction -> . SetOf LParen RParen
    (42) ArgumentFunction -> . SetOf LParen Wfts RParen
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    None            shift and go to state 57
    LBracket        shift and go to state 59
    SetOf           shift and go to state 60
    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    FWft                           shift and go to state 2
    Arguments                      shift and go to state 54
    Argument                       shift and go to state 55
    Wft                            shift and go to state 56
    ArgumentFunction               shift and go to state 58
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 36

    (13) BinaryOp -> Impl LParen . Argument Comma Argument RParen
    (36) Argument -> . Wft
    (37) Argument -> . None
    (38) Argument -> . ArgumentFunction
    (39) Argument -> . LBracket RBracket
    (40) Argument -> . LBracket Wfts RBracket
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (41) ArgumentFunction -> . SetOf LParen RParen
    (42) ArgumentFunction -> . SetOf LParen Wfts RParen
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    None            shift and go to state 57
    LBracket        shift and go to state 59
    SetOf           shift and go to state 60
    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Argument                       shift and go to state 61
    Wft                            shift and go to state 56
    ArgumentFunction               shift and go to state 58
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 37

    (14) BinaryOp -> OrImpl LParen . Argument Comma Argument RParen
    (36) Argument -> . Wft
    (37) Argument -> . None
    (38) Argument -> . ArgumentFunction
    (39) Argument -> . LBracket RBracket
    (40) Argument -> . LBracket Wfts RBracket
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (41) ArgumentFunction -> . SetOf LParen RParen
    (42) ArgumentFunction -> . SetOf LParen Wfts RParen
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    None            shift and go to state 57
    LBracket        shift and go to state 59
    SetOf           shift and go to state 60
    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Argument                       shift and go to state 62
    Wft                            shift and go to state 56
    ArgumentFunction               shift and go to state 58
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 38

    (15) BinaryOp -> AndImpl LParen . Argument Comma Argument RParen
    (36) Argument -> . Wft
    (37) Argument -> . None
    (38) Argument -> . ArgumentFunction
    (39) Argument -> . LBracket RBracket
    (40) Argument -> . LBracket Wfts RBracket
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (41) ArgumentFunction -> . SetOf LParen RParen
    (42) ArgumentFunction -> . SetOf LParen Wfts RParen
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    None            shift and go to state 57
    LBracket        shift and go to state 59
    SetOf           shift and go to state 60
    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Argument                       shift and go to state 63
    Wft                            shift and go to state 56
    ArgumentFunction               shift and go to state 58
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 39

    (16) NaryOp -> And LParen . Wfts RParen
    (43) Wfts -> . Wft
    (44) Wfts -> . Wfts Comma Wft
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Wfts                           shift and go to state 64
    Wft                            shift and go to state 65
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 40

    (17) NaryOp -> Or LParen . Wfts RParen
    (43) Wfts -> . Wft
    (44) Wfts -> . Wfts Comma Wft
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Wfts                           shift and go to state 66
    Wft                            shift and go to state 65
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 41

    (18) NaryOp -> Not LParen . Wfts RParen
    (43) Wfts -> . Wft
    (44) Wfts -> . Wfts Comma Wft
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Wfts                           shift and go to state 67
    Wft                            shift and go to state 65
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 42

    (19) NaryOp -> Nor LParen . Wfts RParen
    (43) Wfts -> . Wft
    (44) Wfts -> . Wfts Comma Wft
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Wfts                           shift and go to state 68
    Wft                            shift and go to state 65
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 43

    (20) NaryOp -> Thnot LParen . Wfts RParen
    (43) Wfts -> . Wft
    (44) Wfts -> . Wfts Comma Wft
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Wfts                           shift and go to state 69
    Wft                            shift and go to state 65
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 44

    (21) NaryOp -> Thnor LParen . Wfts RParen
    (43) Wfts -> . Wft
    (44) Wfts -> . Wfts Comma Wft
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Wfts                           shift and go to state 70
    Wft                            shift and go to state 65
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 45

    (22) NaryOp -> Nand LParen . Wfts RParen
    (43) Wfts -> . Wft
    (44) Wfts -> . Wfts Comma Wft
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Wfts                           shift and go to state 71
    Wft                            shift and go to state 65
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 46

    (23) NaryOp -> Xor LParen . Wfts RParen
    (43) Wfts -> . Wft
    (44) Wfts -> . Wfts Comma Wft
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Wfts                           shift and go to state 72
    Wft                            shift and go to state 65
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 47

    (24) NaryOp -> DoubImpl LParen . Wfts RParen
    (43) Wfts -> . Wft
    (44) Wfts -> . Wfts Comma Wft
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Wfts                           shift and go to state 73
    Wft                            shift and go to state 65
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 48

    (25) MinMaxOp -> AndOr LBrace . Integer Comma Integer RBrace LParen Wfts RParen

    Integer         shift and go to state 74


state 49

    (26) MinMaxOp -> Thresh LBrace . Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> Thresh LBrace . Integer RBrace LParen Wfts RParen

    Integer         shift and go to state 75


state 50

    (32) CloseStmt -> Close LParen . AtomicNameSet Comma Wft RParen
    (47) AtomicNameSet -> . AtomicName
    (48) AtomicNameSet -> . LParen AtomicNames RParen
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer

    LParen          shift and go to state 76
    Identifier      shift and go to state 14
    Integer         shift and go to state 15

    AtomicNameSet                  shift and go to state 77
    AtomicName                     shift and go to state 78

state 51

    (28) EveryStmt -> Every LBrace . AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> Every LBrace . AtomicName RBrace LParen RParen
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer

    Identifier      shift and go to state 14
    Integer         shift and go to state 15

    AtomicName                     shift and go to state 79

state 52

    (30) SomeStmt -> Some LBrace . AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> Some LBrace . AtomicName LParen AtomicName RParen RBrace LParen RParen
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer

    Identifier      shift and go to state 14
    Integer         shift and go to state 15

    AtomicName                     shift and go to state 80

state 53

    (34) QIdenStmt -> QIdentifier LParen . Wfts RParen
    (35) QIdenStmt -> QIdentifier LParen . RParen
    (43) Wfts -> . Wft
    (44) Wfts -> . Wfts Comma Wft
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    RParen          shift and go to state 82
    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Wfts                           shift and go to state 81
    Wft                            shift and go to state 65
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 54

    (33) Function -> FWft LParen Arguments . RParen
    (46) Arguments -> Arguments . Comma Argument

    RParen          shift and go to state 83
    Comma           shift and go to state 84


state 55

    (45) Arguments -> Argument .

    RParen          reduce using rule 45 (Arguments -> Argument .)
    Comma           reduce using rule 45 (Arguments -> Argument .)


state 56

    (36) Argument -> Wft .

    RParen          reduce using rule 36 (Argument -> Wft .)
    Comma           reduce using rule 36 (Argument -> Wft .)


state 57

    (37) Argument -> None .

    RParen          reduce using rule 37 (Argument -> None .)
    Comma           reduce using rule 37 (Argument -> None .)


state 58

    (38) Argument -> ArgumentFunction .

    RParen          reduce using rule 38 (Argument -> ArgumentFunction .)
    Comma           reduce using rule 38 (Argument -> ArgumentFunction .)


state 59

    (39) Argument -> LBracket . RBracket
    (40) Argument -> LBracket . Wfts RBracket
    (43) Wfts -> . Wft
    (44) Wfts -> . Wfts Comma Wft
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    RBracket        shift and go to state 85
    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Wfts                           shift and go to state 86
    Wft                            shift and go to state 65
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 60

    (41) ArgumentFunction -> SetOf . LParen RParen
    (42) ArgumentFunction -> SetOf . LParen Wfts RParen

    LParen          shift and go to state 87


state 61

    (13) BinaryOp -> Impl LParen Argument . Comma Argument RParen

    Comma           shift and go to state 88


state 62

    (14) BinaryOp -> OrImpl LParen Argument . Comma Argument RParen

    Comma           shift and go to state 89


state 63

    (15) BinaryOp -> AndImpl LParen Argument . Comma Argument RParen

    Comma           shift and go to state 90


state 64

    (16) NaryOp -> And LParen Wfts . RParen
    (44) Wfts -> Wfts . Comma Wft

    RParen          shift and go to state 91
    Comma           shift and go to state 92


state 65

    (43) Wfts -> Wft .

    RParen          reduce using rule 43 (Wfts -> Wft .)
    Comma           reduce using rule 43 (Wfts -> Wft .)
    RBracket        reduce using rule 43 (Wfts -> Wft .)


state 66

    (17) NaryOp -> Or LParen Wfts . RParen
    (44) Wfts -> Wfts . Comma Wft

    RParen          shift and go to state 93
    Comma           shift and go to state 92


state 67

    (18) NaryOp -> Not LParen Wfts . RParen
    (44) Wfts -> Wfts . Comma Wft

    RParen          shift and go to state 94
    Comma           shift and go to state 92


state 68

    (19) NaryOp -> Nor LParen Wfts . RParen
    (44) Wfts -> Wfts . Comma Wft

    RParen          shift and go to state 95
    Comma           shift and go to state 92


state 69

    (20) NaryOp -> Thnot LParen Wfts . RParen
    (44) Wfts -> Wfts . Comma Wft

    RParen          shift and go to state 96
    Comma           shift and go to state 92


state 70

    (21) NaryOp -> Thnor LParen Wfts . RParen
    (44) Wfts -> Wfts . Comma Wft

    RParen          shift and go to state 97
    Comma           shift and go to state 92


state 71

    (22) NaryOp -> Nand LParen Wfts . RParen
    (44) Wfts -> Wfts . Comma Wft

    RParen          shift and go to state 98
    Comma           shift and go to state 92


state 72

    (23) NaryOp -> Xor LParen Wfts . RParen
    (44) Wfts -> Wfts . Comma Wft

    RParen          shift and go to state 99
    Comma           shift and go to state 92


state 73

    (24) NaryOp -> DoubImpl LParen Wfts . RParen
    (44) Wfts -> Wfts . Comma Wft

    RParen          shift and go to state 100
    Comma           shift and go to state 92


state 74

    (25) MinMaxOp -> AndOr LBrace Integer . Comma Integer RBrace LParen Wfts RParen

    Comma           shift and go to state 101


state 75

    (26) MinMaxOp -> Thresh LBrace Integer . Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> Thresh LBrace Integer . RBrace LParen Wfts RParen

    Comma           shift and go to state 102
    RBrace          shift and go to state 103


state 76

    (48) AtomicNameSet -> LParen . AtomicNames RParen
    (49) AtomicNames -> . AtomicName
    (50) AtomicNames -> . AtomicNames Comma AtomicName
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer

    Identifier      shift and go to state 14
    Integer         shift and go to state 15

    AtomicNames                    shift and go to state 104
    AtomicName                     shift and go to state 105

state 77

    (32) CloseStmt -> Close LParen AtomicNameSet . Comma Wft RParen

    Comma           shift and go to state 106


state 78

    (47) AtomicNameSet -> AtomicName .

    Comma           reduce using rule 47 (AtomicNameSet -> AtomicName .)


state 79

    (28) EveryStmt -> Every LBrace AtomicName . RBrace LParen Wfts RParen
    (29) EveryStmt -> Every LBrace AtomicName . RBrace LParen RParen

    RBrace          shift and go to state 107


state 80

    (30) SomeStmt -> Some LBrace AtomicName . LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> Some LBrace AtomicName . LParen AtomicName RParen RBrace LParen RParen

    LParen          shift and go to state 108


state 81

    (34) QIdenStmt -> QIdentifier LParen Wfts . RParen
    (44) Wfts -> Wfts . Comma Wft

    RParen          shift and go to state 109
    Comma           shift and go to state 92


state 82

    (35) QIdenStmt -> QIdentifier LParen RParen .

    $end            reduce using rule 35 (QIdenStmt -> QIdentifier LParen RParen .)
    RParen          reduce using rule 35 (QIdenStmt -> QIdentifier LParen RParen .)
    Comma           reduce using rule 35 (QIdenStmt -> QIdentifier LParen RParen .)
    RBracket        reduce using rule 35 (QIdenStmt -> QIdentifier LParen RParen .)


state 83

    (33) Function -> FWft LParen Arguments RParen .

    LParen          reduce using rule 33 (Function -> FWft LParen Arguments RParen .)
    $end            reduce using rule 33 (Function -> FWft LParen Arguments RParen .)
    RParen          reduce using rule 33 (Function -> FWft LParen Arguments RParen .)
    Comma           reduce using rule 33 (Function -> FWft LParen Arguments RParen .)
    RBracket        reduce using rule 33 (Function -> FWft LParen Arguments RParen .)


state 84

    (46) Arguments -> Arguments Comma . Argument
    (36) Argument -> . Wft
    (37) Argument -> . None
    (38) Argument -> . ArgumentFunction
    (39) Argument -> . LBracket RBracket
    (40) Argument -> . LBracket Wfts RBracket
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (41) ArgumentFunction -> . SetOf LParen RParen
    (42) ArgumentFunction -> . SetOf LParen Wfts RParen
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    None            shift and go to state 57
    LBracket        shift and go to state 59
    SetOf           shift and go to state 60
    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Argument                       shift and go to state 110
    Wft                            shift and go to state 56
    ArgumentFunction               shift and go to state 58
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 85

    (39) Argument -> LBracket RBracket .

    RParen          reduce using rule 39 (Argument -> LBracket RBracket .)
    Comma           reduce using rule 39 (Argument -> LBracket RBracket .)


state 86

    (40) Argument -> LBracket Wfts . RBracket
    (44) Wfts -> Wfts . Comma Wft

    RBracket        shift and go to state 111
    Comma           shift and go to state 92


state 87

    (41) ArgumentFunction -> SetOf LParen . RParen
    (42) ArgumentFunction -> SetOf LParen . Wfts RParen
    (43) Wfts -> . Wft
    (44) Wfts -> . Wfts Comma Wft
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    RParen          shift and go to state 112
    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Wfts                           shift and go to state 113
    Wft                            shift and go to state 65
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 88

    (13) BinaryOp -> Impl LParen Argument Comma . Argument RParen
    (36) Argument -> . Wft
    (37) Argument -> . None
    (38) Argument -> . ArgumentFunction
    (39) Argument -> . LBracket RBracket
    (40) Argument -> . LBracket Wfts RBracket
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (41) ArgumentFunction -> . SetOf LParen RParen
    (42) ArgumentFunction -> . SetOf LParen Wfts RParen
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    None            shift and go to state 57
    LBracket        shift and go to state 59
    SetOf           shift and go to state 60
    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Argument                       shift and go to state 114
    Wft                            shift and go to state 56
    ArgumentFunction               shift and go to state 58
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 89

    (14) BinaryOp -> OrImpl LParen Argument Comma . Argument RParen
    (36) Argument -> . Wft
    (37) Argument -> . None
    (38) Argument -> . ArgumentFunction
    (39) Argument -> . LBracket RBracket
    (40) Argument -> . LBracket Wfts RBracket
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (41) ArgumentFunction -> . SetOf LParen RParen
    (42) ArgumentFunction -> . SetOf LParen Wfts RParen
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    None            shift and go to state 57
    LBracket        shift and go to state 59
    SetOf           shift and go to state 60
    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Argument                       shift and go to state 115
    Wft                            shift and go to state 56
    ArgumentFunction               shift and go to state 58
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 90

    (15) BinaryOp -> AndImpl LParen Argument Comma . Argument RParen
    (36) Argument -> . Wft
    (37) Argument -> . None
    (38) Argument -> . ArgumentFunction
    (39) Argument -> . LBracket RBracket
    (40) Argument -> . LBracket Wfts RBracket
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (41) ArgumentFunction -> . SetOf LParen RParen
    (42) ArgumentFunction -> . SetOf LParen Wfts RParen
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    None            shift and go to state 57
    LBracket        shift and go to state 59
    SetOf           shift and go to state 60
    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Argument                       shift and go to state 116
    Wft                            shift and go to state 56
    ArgumentFunction               shift and go to state 58
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 91

    (16) NaryOp -> And LParen Wfts RParen .

    $end            reduce using rule 16 (NaryOp -> And LParen Wfts RParen .)
    RParen          reduce using rule 16 (NaryOp -> And LParen Wfts RParen .)
    Comma           reduce using rule 16 (NaryOp -> And LParen Wfts RParen .)
    RBracket        reduce using rule 16 (NaryOp -> And LParen Wfts RParen .)


state 92

    (44) Wfts -> Wfts Comma . Wft
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Wft                            shift and go to state 117
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 93

    (17) NaryOp -> Or LParen Wfts RParen .

    $end            reduce using rule 17 (NaryOp -> Or LParen Wfts RParen .)
    RParen          reduce using rule 17 (NaryOp -> Or LParen Wfts RParen .)
    Comma           reduce using rule 17 (NaryOp -> Or LParen Wfts RParen .)
    RBracket        reduce using rule 17 (NaryOp -> Or LParen Wfts RParen .)


state 94

    (18) NaryOp -> Not LParen Wfts RParen .

    $end            reduce using rule 18 (NaryOp -> Not LParen Wfts RParen .)
    RParen          reduce using rule 18 (NaryOp -> Not LParen Wfts RParen .)
    Comma           reduce using rule 18 (NaryOp -> Not LParen Wfts RParen .)
    RBracket        reduce using rule 18 (NaryOp -> Not LParen Wfts RParen .)


state 95

    (19) NaryOp -> Nor LParen Wfts RParen .

    $end            reduce using rule 19 (NaryOp -> Nor LParen Wfts RParen .)
    RParen          reduce using rule 19 (NaryOp -> Nor LParen Wfts RParen .)
    Comma           reduce using rule 19 (NaryOp -> Nor LParen Wfts RParen .)
    RBracket        reduce using rule 19 (NaryOp -> Nor LParen Wfts RParen .)


state 96

    (20) NaryOp -> Thnot LParen Wfts RParen .

    $end            reduce using rule 20 (NaryOp -> Thnot LParen Wfts RParen .)
    RParen          reduce using rule 20 (NaryOp -> Thnot LParen Wfts RParen .)
    Comma           reduce using rule 20 (NaryOp -> Thnot LParen Wfts RParen .)
    RBracket        reduce using rule 20 (NaryOp -> Thnot LParen Wfts RParen .)


state 97

    (21) NaryOp -> Thnor LParen Wfts RParen .

    $end            reduce using rule 21 (NaryOp -> Thnor LParen Wfts RParen .)
    RParen          reduce using rule 21 (NaryOp -> Thnor LParen Wfts RParen .)
    Comma           reduce using rule 21 (NaryOp -> Thnor LParen Wfts RParen .)
    RBracket        reduce using rule 21 (NaryOp -> Thnor LParen Wfts RParen .)


state 98

    (22) NaryOp -> Nand LParen Wfts RParen .

    $end            reduce using rule 22 (NaryOp -> Nand LParen Wfts RParen .)
    RParen          reduce using rule 22 (NaryOp -> Nand LParen Wfts RParen .)
    Comma           reduce using rule 22 (NaryOp -> Nand LParen Wfts RParen .)
    RBracket        reduce using rule 22 (NaryOp -> Nand LParen Wfts RParen .)


state 99

    (23) NaryOp -> Xor LParen Wfts RParen .

    $end            reduce using rule 23 (NaryOp -> Xor LParen Wfts RParen .)
    RParen          reduce using rule 23 (NaryOp -> Xor LParen Wfts RParen .)
    Comma           reduce using rule 23 (NaryOp -> Xor LParen Wfts RParen .)
    RBracket        reduce using rule 23 (NaryOp -> Xor LParen Wfts RParen .)


state 100

    (24) NaryOp -> DoubImpl LParen Wfts RParen .

    $end            reduce using rule 24 (NaryOp -> DoubImpl LParen Wfts RParen .)
    RParen          reduce using rule 24 (NaryOp -> DoubImpl LParen Wfts RParen .)
    Comma           reduce using rule 24 (NaryOp -> DoubImpl LParen Wfts RParen .)
    RBracket        reduce using rule 24 (NaryOp -> DoubImpl LParen Wfts RParen .)


state 101

    (25) MinMaxOp -> AndOr LBrace Integer Comma . Integer RBrace LParen Wfts RParen

    Integer         shift and go to state 118


state 102

    (26) MinMaxOp -> Thresh LBrace Integer Comma . Integer RBrace LParen Wfts RParen

    Integer         shift and go to state 119


state 103

    (27) MinMaxOp -> Thresh LBrace Integer RBrace . LParen Wfts RParen

    LParen          shift and go to state 120


state 104

    (48) AtomicNameSet -> LParen AtomicNames . RParen
    (50) AtomicNames -> AtomicNames . Comma AtomicName

    RParen          shift and go to state 121
    Comma           shift and go to state 122


state 105

    (49) AtomicNames -> AtomicName .

    RParen          reduce using rule 49 (AtomicNames -> AtomicName .)
    Comma           reduce using rule 49 (AtomicNames -> AtomicName .)


state 106

    (32) CloseStmt -> Close LParen AtomicNameSet Comma . Wft RParen
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Wft                            shift and go to state 123
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 107

    (28) EveryStmt -> Every LBrace AtomicName RBrace . LParen Wfts RParen
    (29) EveryStmt -> Every LBrace AtomicName RBrace . LParen RParen

    LParen          shift and go to state 124


state 108

    (30) SomeStmt -> Some LBrace AtomicName LParen . AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> Some LBrace AtomicName LParen . AtomicName RParen RBrace LParen RParen
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer

    Identifier      shift and go to state 14
    Integer         shift and go to state 15

    AtomicName                     shift and go to state 125

state 109

    (34) QIdenStmt -> QIdentifier LParen Wfts RParen .

    $end            reduce using rule 34 (QIdenStmt -> QIdentifier LParen Wfts RParen .)
    RParen          reduce using rule 34 (QIdenStmt -> QIdentifier LParen Wfts RParen .)
    Comma           reduce using rule 34 (QIdenStmt -> QIdentifier LParen Wfts RParen .)
    RBracket        reduce using rule 34 (QIdenStmt -> QIdentifier LParen Wfts RParen .)


state 110

    (46) Arguments -> Arguments Comma Argument .

    RParen          reduce using rule 46 (Arguments -> Arguments Comma Argument .)
    Comma           reduce using rule 46 (Arguments -> Arguments Comma Argument .)


state 111

    (40) Argument -> LBracket Wfts RBracket .

    RParen          reduce using rule 40 (Argument -> LBracket Wfts RBracket .)
    Comma           reduce using rule 40 (Argument -> LBracket Wfts RBracket .)


state 112

    (41) ArgumentFunction -> SetOf LParen RParen .

    RParen          reduce using rule 41 (ArgumentFunction -> SetOf LParen RParen .)
    Comma           reduce using rule 41 (ArgumentFunction -> SetOf LParen RParen .)


state 113

    (42) ArgumentFunction -> SetOf LParen Wfts . RParen
    (44) Wfts -> Wfts . Comma Wft

    RParen          shift and go to state 126
    Comma           shift and go to state 92


state 114

    (13) BinaryOp -> Impl LParen Argument Comma Argument . RParen

    RParen          shift and go to state 127


state 115

    (14) BinaryOp -> OrImpl LParen Argument Comma Argument . RParen

    RParen          shift and go to state 128


state 116

    (15) BinaryOp -> AndImpl LParen Argument Comma Argument . RParen

    RParen          shift and go to state 129


state 117

    (44) Wfts -> Wfts Comma Wft .

    RParen          reduce using rule 44 (Wfts -> Wfts Comma Wft .)
    Comma           reduce using rule 44 (Wfts -> Wfts Comma Wft .)
    RBracket        reduce using rule 44 (Wfts -> Wfts Comma Wft .)


state 118

    (25) MinMaxOp -> AndOr LBrace Integer Comma Integer . RBrace LParen Wfts RParen

    RBrace          shift and go to state 130


state 119

    (26) MinMaxOp -> Thresh LBrace Integer Comma Integer . RBrace LParen Wfts RParen

    RBrace          shift and go to state 131


state 120

    (27) MinMaxOp -> Thresh LBrace Integer RBrace LParen . Wfts RParen
    (43) Wfts -> . Wft
    (44) Wfts -> . Wfts Comma Wft
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Wfts                           shift and go to state 132
    Wft                            shift and go to state 65
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 121

    (48) AtomicNameSet -> LParen AtomicNames RParen .

    Comma           reduce using rule 48 (AtomicNameSet -> LParen AtomicNames RParen .)


state 122

    (50) AtomicNames -> AtomicNames Comma . AtomicName
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer

    Identifier      shift and go to state 14
    Integer         shift and go to state 15

    AtomicName                     shift and go to state 133

state 123

    (32) CloseStmt -> Close LParen AtomicNameSet Comma Wft . RParen

    RParen          shift and go to state 134


state 124

    (28) EveryStmt -> Every LBrace AtomicName RBrace LParen . Wfts RParen
    (29) EveryStmt -> Every LBrace AtomicName RBrace LParen . RParen
    (43) Wfts -> . Wft
    (44) Wfts -> . Wfts Comma Wft
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    RParen          shift and go to state 136
    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    AtomicName                     shift and go to state 4
    Wfts                           shift and go to state 135
    Wft                            shift and go to state 65
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 125

    (30) SomeStmt -> Some LBrace AtomicName LParen AtomicName . RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> Some LBrace AtomicName LParen AtomicName . RParen RBrace LParen RParen

    RParen          shift and go to state 137


state 126

    (42) ArgumentFunction -> SetOf LParen Wfts RParen .

    RParen          reduce using rule 42 (ArgumentFunction -> SetOf LParen Wfts RParen .)
    Comma           reduce using rule 42 (ArgumentFunction -> SetOf LParen Wfts RParen .)


state 127

    (13) BinaryOp -> Impl LParen Argument Comma Argument RParen .

    $end            reduce using rule 13 (BinaryOp -> Impl LParen Argument Comma Argument RParen .)
    RParen          reduce using rule 13 (BinaryOp -> Impl LParen Argument Comma Argument RParen .)
    Comma           reduce using rule 13 (BinaryOp -> Impl LParen Argument Comma Argument RParen .)
    RBracket        reduce using rule 13 (BinaryOp -> Impl LParen Argument Comma Argument RParen .)


state 128

    (14) BinaryOp -> OrImpl LParen Argument Comma Argument RParen .

    $end            reduce using rule 14 (BinaryOp -> OrImpl LParen Argument Comma Argument RParen .)
    RParen          reduce using rule 14 (BinaryOp -> OrImpl LParen Argument Comma Argument RParen .)
    Comma           reduce using rule 14 (BinaryOp -> OrImpl LParen Argument Comma Argument RParen .)
    RBracket        reduce using rule 14 (BinaryOp -> OrImpl LParen Argument Comma Argument RParen .)


state 129

    (15) BinaryOp -> AndImpl LParen Argument Comma Argument RParen .

    $end            reduce using rule 15 (BinaryOp -> AndImpl LParen Argument Comma Argument RParen .)
    RParen          reduce using rule 15 (BinaryOp -> AndImpl LParen Argument Comma Argument RParen .)
    Comma           reduce using rule 15 (BinaryOp -> AndImpl LParen Argument Comma Argument RParen .)
    RBracket        reduce using rule 15 (BinaryOp -> AndImpl LParen Argument Comma Argument RParen .)


state 130

    (25) MinMaxOp -> AndOr LBrace Integer Comma Integer RBrace . LParen Wfts RParen

    LParen          shift and go to state 138


state 131

    (26) MinMaxOp -> Thresh LBrace Integer Comma Integer RBrace . LParen Wfts RParen

    LParen          shift and go to state 139


state 132

    (27) MinMaxOp -> Thresh LBrace Integer RBrace LParen Wfts . RParen
    (44) Wfts -> Wfts . Comma Wft

    RParen          shift and go to state 140
    Comma           shift and go to state 92


state 133

    (50) AtomicNames -> AtomicNames Comma AtomicName .

    RParen          reduce using rule 50 (AtomicNames -> AtomicNames Comma AtomicName .)
    Comma           reduce using rule 50 (AtomicNames -> AtomicNames Comma AtomicName .)


state 134

    (32) CloseStmt -> Close LParen AtomicNameSet Comma Wft RParen .

    $end            reduce using rule 32 (CloseStmt -> Close LParen AtomicNameSet Comma Wft RParen .)
    RParen          reduce using rule 32 (CloseStmt -> Close LParen AtomicNameSet Comma Wft RParen .)
    Comma           reduce using rule 32 (CloseStmt -> Close LParen AtomicNameSet Comma Wft RParen .)
    RBracket        reduce using rule 32 (CloseStmt -> Close LParen AtomicNameSet Comma Wft RParen .)


state 135

    (28) EveryStmt -> Every LBrace AtomicName RBrace LParen Wfts . RParen
    (44) Wfts -> Wfts . Comma Wft

    RParen          shift and go to state 141
    Comma           shift and go to state 92


state 136

    (29) EveryStmt -> Every LBrace AtomicName RBrace LParen RParen .

    $end            reduce using rule 29 (EveryStmt -> Every LBrace AtomicName RBrace LParen RParen .)
    RParen          reduce using rule 29 (EveryStmt -> Every LBrace AtomicName RBrace LParen RParen .)
    Comma           reduce using rule 29 (EveryStmt -> Every LBrace AtomicName RBrace LParen RParen .)
    RBracket        reduce using rule 29 (EveryStmt -> Every LBrace AtomicName RBrace LParen RParen .)


state 137

    (30) SomeStmt -> Some LBrace AtomicName LParen AtomicName RParen . RBrace LParen Wfts RParen
    (31) SomeStmt -> Some LBrace AtomicName LParen AtomicName RParen . RBrace LParen RParen

    RBrace          shift and go to state 142


state 138

    (25) MinMaxOp -> AndOr LBrace Integer Comma Integer RBrace LParen . Wfts RParen
    (43) Wfts -> . Wft
    (44) Wfts -> . Wfts Comma Wft
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Wfts                           shift and go to state 143
    Wft                            shift and go to state 65
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 139

    (26) MinMaxOp -> Thresh LBrace Integer Comma Integer RBrace LParen . Wfts RParen
    (43) Wfts -> . Wft
    (44) Wfts -> . Wfts Comma Wft
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    Wfts                           shift and go to state 144
    Wft                            shift and go to state 65
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    AtomicName                     shift and go to state 4
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 140

    (27) MinMaxOp -> Thresh LBrace Integer RBrace LParen Wfts RParen .

    $end            reduce using rule 27 (MinMaxOp -> Thresh LBrace Integer RBrace LParen Wfts RParen .)
    RParen          reduce using rule 27 (MinMaxOp -> Thresh LBrace Integer RBrace LParen Wfts RParen .)
    Comma           reduce using rule 27 (MinMaxOp -> Thresh LBrace Integer RBrace LParen Wfts RParen .)
    RBracket        reduce using rule 27 (MinMaxOp -> Thresh LBrace Integer RBrace LParen Wfts RParen .)


state 141

    (28) EveryStmt -> Every LBrace AtomicName RBrace LParen Wfts RParen .

    $end            reduce using rule 28 (EveryStmt -> Every LBrace AtomicName RBrace LParen Wfts RParen .)
    RParen          reduce using rule 28 (EveryStmt -> Every LBrace AtomicName RBrace LParen Wfts RParen .)
    Comma           reduce using rule 28 (EveryStmt -> Every LBrace AtomicName RBrace LParen Wfts RParen .)
    RBracket        reduce using rule 28 (EveryStmt -> Every LBrace AtomicName RBrace LParen Wfts RParen .)


state 142

    (30) SomeStmt -> Some LBrace AtomicName LParen AtomicName RParen RBrace . LParen Wfts RParen
    (31) SomeStmt -> Some LBrace AtomicName LParen AtomicName RParen RBrace . LParen RParen

    LParen          shift and go to state 145


state 143

    (25) MinMaxOp -> AndOr LBrace Integer Comma Integer RBrace LParen Wfts . RParen
    (44) Wfts -> Wfts . Comma Wft

    RParen          shift and go to state 146
    Comma           shift and go to state 92


state 144

    (26) MinMaxOp -> Thresh LBrace Integer Comma Integer RBrace LParen Wfts . RParen
    (44) Wfts -> Wfts . Comma Wft

    RParen          shift and go to state 147
    Comma           shift and go to state 92


state 145

    (30) SomeStmt -> Some LBrace AtomicName LParen AtomicName RParen RBrace LParen . Wfts RParen
    (31) SomeStmt -> Some LBrace AtomicName LParen AtomicName RParen RBrace LParen . RParen
    (43) Wfts -> . Wft
    (44) Wfts -> . Wfts Comma Wft
    (1) Wft -> . FWft
    (2) Wft -> . OWft
    (3) FWft -> . AtomicName
    (4) FWft -> . Y_WftNode
    (5) FWft -> . Function
    (6) OWft -> . BinaryOp
    (7) OWft -> . NaryOp
    (8) OWft -> . MinMaxOp
    (9) OWft -> . CloseStmt
    (10) OWft -> . EveryStmt
    (11) OWft -> . SomeStmt
    (12) OWft -> . QIdenStmt
    (51) AtomicName -> . Identifier
    (52) AtomicName -> . Integer
    (53) Y_WftNode -> . WftNode
    (33) Function -> . FWft LParen Arguments RParen
    (13) BinaryOp -> . Impl LParen Argument Comma Argument RParen
    (14) BinaryOp -> . OrImpl LParen Argument Comma Argument RParen
    (15) BinaryOp -> . AndImpl LParen Argument Comma Argument RParen
    (16) NaryOp -> . And LParen Wfts RParen
    (17) NaryOp -> . Or LParen Wfts RParen
    (18) NaryOp -> . Not LParen Wfts RParen
    (19) NaryOp -> . Nor LParen Wfts RParen
    (20) NaryOp -> . Thnot LParen Wfts RParen
    (21) NaryOp -> . Thnor LParen Wfts RParen
    (22) NaryOp -> . Nand LParen Wfts RParen
    (23) NaryOp -> . Xor LParen Wfts RParen
    (24) NaryOp -> . DoubImpl LParen Wfts RParen
    (25) MinMaxOp -> . AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (26) MinMaxOp -> . Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen
    (27) MinMaxOp -> . Thresh LBrace Integer RBrace LParen Wfts RParen
    (32) CloseStmt -> . Close LParen AtomicNameSet Comma Wft RParen
    (28) EveryStmt -> . Every LBrace AtomicName RBrace LParen Wfts RParen
    (29) EveryStmt -> . Every LBrace AtomicName RBrace LParen RParen
    (30) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen
    (31) SomeStmt -> . Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen
    (34) QIdenStmt -> . QIdentifier LParen Wfts RParen
    (35) QIdenStmt -> . QIdentifier LParen RParen

    RParen          shift and go to state 148
    Identifier      shift and go to state 14
    Integer         shift and go to state 15
    WftNode         shift and go to state 16
    Impl            shift and go to state 17
    OrImpl          shift and go to state 18
    AndImpl         shift and go to state 19
    And             shift and go to state 20
    Or              shift and go to state 21
    Not             shift and go to state 22
    Nor             shift and go to state 23
    Thnot           shift and go to state 24
    Thnor           shift and go to state 25
    Nand            shift and go to state 26
    Xor             shift and go to state 27
    DoubImpl        shift and go to state 28
    AndOr           shift and go to state 29
    Thresh          shift and go to state 30
    Close           shift and go to state 31
    Every           shift and go to state 32
    Some            shift and go to state 33
    QIdentifier     shift and go to state 34

    AtomicName                     shift and go to state 4
    Wfts                           shift and go to state 149
    Wft                            shift and go to state 65
    FWft                           shift and go to state 2
    OWft                           shift and go to state 3
    Y_WftNode                      shift and go to state 5
    Function                       shift and go to state 6
    BinaryOp                       shift and go to state 7
    NaryOp                         shift and go to state 8
    MinMaxOp                       shift and go to state 9
    CloseStmt                      shift and go to state 10
    EveryStmt                      shift and go to state 11
    SomeStmt                       shift and go to state 12
    QIdenStmt                      shift and go to state 13

state 146

    (25) MinMaxOp -> AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen .

    $end            reduce using rule 25 (MinMaxOp -> AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen .)
    RParen          reduce using rule 25 (MinMaxOp -> AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen .)
    Comma           reduce using rule 25 (MinMaxOp -> AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen .)
    RBracket        reduce using rule 25 (MinMaxOp -> AndOr LBrace Integer Comma Integer RBrace LParen Wfts RParen .)


state 147

    (26) MinMaxOp -> Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen .

    $end            reduce using rule 26 (MinMaxOp -> Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen .)
    RParen          reduce using rule 26 (MinMaxOp -> Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen .)
    Comma           reduce using rule 26 (MinMaxOp -> Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen .)
    RBracket        reduce using rule 26 (MinMaxOp -> Thresh LBrace Integer Comma Integer RBrace LParen Wfts RParen .)


state 148

    (31) SomeStmt -> Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen .

    $end            reduce using rule 31 (SomeStmt -> Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen .)
    RParen          reduce using rule 31 (SomeStmt -> Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen .)
    Comma           reduce using rule 31 (SomeStmt -> Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen .)
    RBracket        reduce using rule 31 (SomeStmt -> Some LBrace AtomicName LParen AtomicName RParen RBrace LParen RParen .)


state 149

    (30) SomeStmt -> Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts . RParen
    (44) Wfts -> Wfts . Comma Wft

    RParen          shift and go to state 150
    Comma           shift and go to state 92


state 150

    (30) SomeStmt -> Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen .

    $end            reduce using rule 30 (SomeStmt -> Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen .)
    RParen          reduce using rule 30 (SomeStmt -> Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen .)
    Comma           reduce using rule 30 (SomeStmt -> Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen .)
    RBracket        reduce using rule 30 (SomeStmt -> Some LBrace AtomicName LParen AtomicName RParen RBrace LParen Wfts RParen .)

