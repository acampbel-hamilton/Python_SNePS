#!/usr/bin/python3

# This file is for unit tests of portions of the SNePS module

import Network

def assertedMembersTest():
	N = Network.Network()
	T1 = Network.Term("1")
	T2 = Network.Term("2")
	T3 = Network.Term("3")
	T4 = Network.Term("4")
	C = Network.Context("test", hyps=set([T1, T2]), ders=set([T3, T4]))

	lst = [T1, T3, Network.Term("5"), Network.Term("6")]
	print()
	print(*lst, sep=" ")
	print()
	print(*N.assertedMembers(set(lst), C), sep=" ")
	print()

	try:
		N.assertedMembers(lst, C)
		print("Error with type checking the 'terms' parameter")
	except AssertionError:
		print("'terms' parameter is not a set type error caught.")

	try:
		N.assertedMembers(set(lst + ["NotATerm"]), C)
		print("Error with type checking the contents of the 'terms' parameter")
	except AssertionError:
		print("'terms' parameter contents have been properly type checked")

	try:
		N.assertedMembers(set(lst), "NotAContext")
		print("Error with type checking the 'ctx' parameter")
	except AssertionError:
		print("'ctx' parameter has been properly type checked")

if __name__ == "__main__":
	assertedMembersTest()
