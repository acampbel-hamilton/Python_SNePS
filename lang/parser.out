Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Wft
Rule 1     Wft -> AtomicWft
Rule 2     Wft -> Y_WftNode
Rule 3     Wft -> LParen Function Arguments RParen
Rule 4     Wft -> LParen BinaryOp Argument Argument RParen
Rule 5     Wft -> LParen NaryOp Wfts RParen
Rule 6     Wft -> LParen Param2Op Wft Wfts RParen
Rule 7     Wft -> LParen Param1Op Wft Wfts RParen
Rule 8     Wft -> LParen Y_Close AtomicNameSet Wft RParen
Rule 9     Wft -> LParen Y_Every AtomicName Wfts RParen
Rule 10    Wft -> LParen SomeCondition Wfts RParen
Rule 11    Wft -> LParen Y_QIdentifier Wfts RParen
Rule 12    BinaryOp -> Y_Impl
Rule 13    NaryOp -> Y_And
Rule 14    NaryOp -> Y_Or
Rule 15    NaryOp -> Y_Not
Rule 16    NaryOp -> Y_Nor
Rule 17    NaryOp -> Y_Thnot
Rule 18    NaryOp -> Y_Thnor
Rule 19    NaryOp -> Y_Nand
Rule 20    NaryOp -> Y_Xor
Rule 21    NaryOp -> Y_DoubImpl
Rule 22    Param2Op -> Y_AndOr LParen Y_Integer Y_Integer RParen
Rule 23    Param2Op -> Y_Thresh LParen Y_Integer Y_Integer RParen
Rule 24    Param1Op -> Y_Thresh LParen Y_Integer RParen
Rule 25    AtomicWft -> AtomicName
Rule 26    AtomicWft -> Y_String
Rule 27    AtomicWft -> Y_Integer
Rule 28    AtomicName -> Y_Identifier
Rule 29    Function -> Wft
Rule 30    Argument -> Wft
Rule 31    Argument -> None
Rule 32    Argument -> LParen ArgumentFunction Wfts RParen
Rule 33    ArgumentFunction -> Y_SetOf
Rule 34    Wfts -> <empty>
Rule 35    Wfts -> Wfts Wft
Rule 36    Arguments -> Argument
Rule 37    Arguments -> Arguments Argument
Rule 38    AtomicNameSet -> AtomicName
Rule 39    AtomicNameSet -> LParen AtomicName AtomicNames RParen
Rule 40    AtomicNames -> <empty>
Rule 41    AtomicNames -> AtomicName AtomicNames
Rule 42    SomeCondition -> Y_Some AtomicName LParen Wfts RParen
Rule 43    Y_String -> String
Rule 44    Y_Integer -> Integer
Rule 45    Y_Impl -> Impl
Rule 46    Y_Or -> Or
Rule 47    Y_Not -> Not
Rule 48    Y_Nor -> Nor
Rule 49    Y_Thnot -> Thnot
Rule 50    Y_Thnor -> Thnor
Rule 51    Y_Nand -> Nand
Rule 52    Y_Xor -> Xor
Rule 53    Y_DoubImpl -> DoubImpl
Rule 54    Y_AndOr -> AndOr
Rule 55    Y_Thresh -> Thresh
Rule 56    Y_SetOf -> SetOf
Rule 57    Y_Every -> Every
Rule 58    Y_Some -> Some
Rule 59    Y_Close -> Close
Rule 60    Y_And -> And
Rule 61    Y_WftNode -> WftNode
Rule 62    Y_QIdentifier -> QIdentifier
Rule 63    Y_Identifier -> Identifier

Terminals, with rules where they appear

And                  : 60
AndOr                : 54
Close                : 59
DoubImpl             : 53
Every                : 57
Identifier           : 63
Impl                 : 45
Integer              : 44
LParen               : 3 4 5 6 7 8 9 10 11 22 23 24 32 39 42
Nand                 : 51
None                 : 31
Nor                  : 48
Not                  : 47
Or                   : 46
QIdentifier          : 62
RParen               : 3 4 5 6 7 8 9 10 11 22 23 24 32 39 42
SetOf                : 56
Some                 : 58
String               : 43
Thnor                : 50
Thnot                : 49
Thresh               : 55
WftNode              : 61
Xor                  : 52
error                : 

Nonterminals, with rules where they appear

Argument             : 4 4 36 37
ArgumentFunction     : 32
Arguments            : 3 37
AtomicName           : 9 25 38 39 41 42
AtomicNameSet        : 8
AtomicNames          : 39 41
AtomicWft            : 1
BinaryOp             : 4
Function             : 3
NaryOp               : 5
Param1Op             : 7
Param2Op             : 6
SomeCondition        : 10
Wft                  : 6 7 8 29 30 35 0
Wfts                 : 5 6 7 9 10 11 32 35 42
Y_And                : 13
Y_AndOr              : 22
Y_Close              : 8
Y_DoubImpl           : 21
Y_Every              : 9
Y_Identifier         : 28
Y_Impl               : 12
Y_Integer            : 22 22 23 23 24 27
Y_Nand               : 19
Y_Nor                : 16
Y_Not                : 15
Y_Or                 : 14
Y_QIdentifier        : 11
Y_SetOf              : 33
Y_Some               : 42
Y_String             : 26
Y_Thnor              : 18
Y_Thnot              : 17
Y_Thresh             : 23 24
Y_WftNode            : 2
Y_Xor                : 20

Parsing method: LALR

state 0

    (0) S' -> . Wft
    (1) Wft -> . AtomicWft
    (2) Wft -> . Y_WftNode
    (3) Wft -> . LParen Function Arguments RParen
    (4) Wft -> . LParen BinaryOp Argument Argument RParen
    (5) Wft -> . LParen NaryOp Wfts RParen
    (6) Wft -> . LParen Param2Op Wft Wfts RParen
    (7) Wft -> . LParen Param1Op Wft Wfts RParen
    (8) Wft -> . LParen Y_Close AtomicNameSet Wft RParen
    (9) Wft -> . LParen Y_Every AtomicName Wfts RParen
    (10) Wft -> . LParen SomeCondition Wfts RParen
    (11) Wft -> . LParen Y_QIdentifier Wfts RParen
    (25) AtomicWft -> . AtomicName
    (26) AtomicWft -> . Y_String
    (27) AtomicWft -> . Y_Integer
    (61) Y_WftNode -> . WftNode
    (28) AtomicName -> . Y_Identifier
    (43) Y_String -> . String
    (44) Y_Integer -> . Integer
    (63) Y_Identifier -> . Identifier

    LParen          shift and go to state 4
    WftNode         shift and go to state 8
    String          shift and go to state 10
    Integer         shift and go to state 11
    Identifier      shift and go to state 12

    Wft                            shift and go to state 1
    AtomicWft                      shift and go to state 2
    Y_WftNode                      shift and go to state 3
    AtomicName                     shift and go to state 5
    Y_String                       shift and go to state 6
    Y_Integer                      shift and go to state 7
    Y_Identifier                   shift and go to state 9

state 1

    (0) S' -> Wft .



state 2

    (1) Wft -> AtomicWft .

    $end            reduce using rule 1 (Wft -> AtomicWft .)
    None            reduce using rule 1 (Wft -> AtomicWft .)
    LParen          reduce using rule 1 (Wft -> AtomicWft .)
    WftNode         reduce using rule 1 (Wft -> AtomicWft .)
    String          reduce using rule 1 (Wft -> AtomicWft .)
    Integer         reduce using rule 1 (Wft -> AtomicWft .)
    Identifier      reduce using rule 1 (Wft -> AtomicWft .)
    RParen          reduce using rule 1 (Wft -> AtomicWft .)


state 3

    (2) Wft -> Y_WftNode .

    $end            reduce using rule 2 (Wft -> Y_WftNode .)
    None            reduce using rule 2 (Wft -> Y_WftNode .)
    LParen          reduce using rule 2 (Wft -> Y_WftNode .)
    WftNode         reduce using rule 2 (Wft -> Y_WftNode .)
    String          reduce using rule 2 (Wft -> Y_WftNode .)
    Integer         reduce using rule 2 (Wft -> Y_WftNode .)
    Identifier      reduce using rule 2 (Wft -> Y_WftNode .)
    RParen          reduce using rule 2 (Wft -> Y_WftNode .)


state 4

    (3) Wft -> LParen . Function Arguments RParen
    (4) Wft -> LParen . BinaryOp Argument Argument RParen
    (5) Wft -> LParen . NaryOp Wfts RParen
    (6) Wft -> LParen . Param2Op Wft Wfts RParen
    (7) Wft -> LParen . Param1Op Wft Wfts RParen
    (8) Wft -> LParen . Y_Close AtomicNameSet Wft RParen
    (9) Wft -> LParen . Y_Every AtomicName Wfts RParen
    (10) Wft -> LParen . SomeCondition Wfts RParen
    (11) Wft -> LParen . Y_QIdentifier Wfts RParen
    (29) Function -> . Wft
    (12) BinaryOp -> . Y_Impl
    (13) NaryOp -> . Y_And
    (14) NaryOp -> . Y_Or
    (15) NaryOp -> . Y_Not
    (16) NaryOp -> . Y_Nor
    (17) NaryOp -> . Y_Thnot
    (18) NaryOp -> . Y_Thnor
    (19) NaryOp -> . Y_Nand
    (20) NaryOp -> . Y_Xor
    (21) NaryOp -> . Y_DoubImpl
    (22) Param2Op -> . Y_AndOr LParen Y_Integer Y_Integer RParen
    (23) Param2Op -> . Y_Thresh LParen Y_Integer Y_Integer RParen
    (24) Param1Op -> . Y_Thresh LParen Y_Integer RParen
    (59) Y_Close -> . Close
    (57) Y_Every -> . Every
    (42) SomeCondition -> . Y_Some AtomicName LParen Wfts RParen
    (62) Y_QIdentifier -> . QIdentifier
    (1) Wft -> . AtomicWft
    (2) Wft -> . Y_WftNode
    (3) Wft -> . LParen Function Arguments RParen
    (4) Wft -> . LParen BinaryOp Argument Argument RParen
    (5) Wft -> . LParen NaryOp Wfts RParen
    (6) Wft -> . LParen Param2Op Wft Wfts RParen
    (7) Wft -> . LParen Param1Op Wft Wfts RParen
    (8) Wft -> . LParen Y_Close AtomicNameSet Wft RParen
    (9) Wft -> . LParen Y_Every AtomicName Wfts RParen
    (10) Wft -> . LParen SomeCondition Wfts RParen
    (11) Wft -> . LParen Y_QIdentifier Wfts RParen
    (45) Y_Impl -> . Impl
    (60) Y_And -> . And
    (46) Y_Or -> . Or
    (47) Y_Not -> . Not
    (48) Y_Nor -> . Nor
    (49) Y_Thnot -> . Thnot
    (50) Y_Thnor -> . Thnor
    (51) Y_Nand -> . Nand
    (52) Y_Xor -> . Xor
    (53) Y_DoubImpl -> . DoubImpl
    (54) Y_AndOr -> . AndOr
    (55) Y_Thresh -> . Thresh
    (58) Y_Some -> . Some
    (25) AtomicWft -> . AtomicName
    (26) AtomicWft -> . Y_String
    (27) AtomicWft -> . Y_Integer
    (61) Y_WftNode -> . WftNode
    (28) AtomicName -> . Y_Identifier
    (43) Y_String -> . String
    (44) Y_Integer -> . Integer
    (63) Y_Identifier -> . Identifier

    Close           shift and go to state 35
    Every           shift and go to state 36
    QIdentifier     shift and go to state 38
    LParen          shift and go to state 4
    Impl            shift and go to state 39
    And             shift and go to state 40
    Or              shift and go to state 41
    Not             shift and go to state 42
    Nor             shift and go to state 43
    Thnot           shift and go to state 44
    Thnor           shift and go to state 45
    Nand            shift and go to state 46
    Xor             shift and go to state 47
    DoubImpl        shift and go to state 48
    AndOr           shift and go to state 49
    Thresh          shift and go to state 50
    Some            shift and go to state 51
    WftNode         shift and go to state 8
    String          shift and go to state 10
    Integer         shift and go to state 11
    Identifier      shift and go to state 12

    Function                       shift and go to state 13
    BinaryOp                       shift and go to state 14
    NaryOp                         shift and go to state 15
    Param2Op                       shift and go to state 16
    Wft                            shift and go to state 17
    Param1Op                       shift and go to state 18
    Y_Close                        shift and go to state 19
    Y_Every                        shift and go to state 20
    AtomicName                     shift and go to state 5
    SomeCondition                  shift and go to state 21
    Y_QIdentifier                  shift and go to state 22
    Y_Impl                         shift and go to state 23
    Y_And                          shift and go to state 24
    Y_Or                           shift and go to state 25
    Y_Not                          shift and go to state 26
    Y_Nor                          shift and go to state 27
    Y_Thnot                        shift and go to state 28
    Y_Thnor                        shift and go to state 29
    Y_Nand                         shift and go to state 30
    Y_Xor                          shift and go to state 31
    Y_DoubImpl                     shift and go to state 32
    Y_AndOr                        shift and go to state 33
    Y_Integer                      shift and go to state 7
    Y_Thresh                       shift and go to state 34
    Y_Some                         shift and go to state 37
    AtomicWft                      shift and go to state 2
    Y_WftNode                      shift and go to state 3
    Y_String                       shift and go to state 6
    Y_Identifier                   shift and go to state 9

state 5

    (25) AtomicWft -> AtomicName .

    $end            reduce using rule 25 (AtomicWft -> AtomicName .)
    None            reduce using rule 25 (AtomicWft -> AtomicName .)
    LParen          reduce using rule 25 (AtomicWft -> AtomicName .)
    WftNode         reduce using rule 25 (AtomicWft -> AtomicName .)
    String          reduce using rule 25 (AtomicWft -> AtomicName .)
    Integer         reduce using rule 25 (AtomicWft -> AtomicName .)
    Identifier      reduce using rule 25 (AtomicWft -> AtomicName .)
    RParen          reduce using rule 25 (AtomicWft -> AtomicName .)


state 6

    (26) AtomicWft -> Y_String .

    $end            reduce using rule 26 (AtomicWft -> Y_String .)
    None            reduce using rule 26 (AtomicWft -> Y_String .)
    LParen          reduce using rule 26 (AtomicWft -> Y_String .)
    WftNode         reduce using rule 26 (AtomicWft -> Y_String .)
    String          reduce using rule 26 (AtomicWft -> Y_String .)
    Integer         reduce using rule 26 (AtomicWft -> Y_String .)
    Identifier      reduce using rule 26 (AtomicWft -> Y_String .)
    RParen          reduce using rule 26 (AtomicWft -> Y_String .)


state 7

    (27) AtomicWft -> Y_Integer .

    $end            reduce using rule 27 (AtomicWft -> Y_Integer .)
    None            reduce using rule 27 (AtomicWft -> Y_Integer .)
    LParen          reduce using rule 27 (AtomicWft -> Y_Integer .)
    WftNode         reduce using rule 27 (AtomicWft -> Y_Integer .)
    String          reduce using rule 27 (AtomicWft -> Y_Integer .)
    Integer         reduce using rule 27 (AtomicWft -> Y_Integer .)
    Identifier      reduce using rule 27 (AtomicWft -> Y_Integer .)
    RParen          reduce using rule 27 (AtomicWft -> Y_Integer .)


state 8

    (61) Y_WftNode -> WftNode .

    $end            reduce using rule 61 (Y_WftNode -> WftNode .)
    None            reduce using rule 61 (Y_WftNode -> WftNode .)
    LParen          reduce using rule 61 (Y_WftNode -> WftNode .)
    WftNode         reduce using rule 61 (Y_WftNode -> WftNode .)
    String          reduce using rule 61 (Y_WftNode -> WftNode .)
    Integer         reduce using rule 61 (Y_WftNode -> WftNode .)
    Identifier      reduce using rule 61 (Y_WftNode -> WftNode .)
    RParen          reduce using rule 61 (Y_WftNode -> WftNode .)


state 9

    (28) AtomicName -> Y_Identifier .

    $end            reduce using rule 28 (AtomicName -> Y_Identifier .)
    None            reduce using rule 28 (AtomicName -> Y_Identifier .)
    LParen          reduce using rule 28 (AtomicName -> Y_Identifier .)
    WftNode         reduce using rule 28 (AtomicName -> Y_Identifier .)
    String          reduce using rule 28 (AtomicName -> Y_Identifier .)
    Integer         reduce using rule 28 (AtomicName -> Y_Identifier .)
    Identifier      reduce using rule 28 (AtomicName -> Y_Identifier .)
    RParen          reduce using rule 28 (AtomicName -> Y_Identifier .)


state 10

    (43) Y_String -> String .

    $end            reduce using rule 43 (Y_String -> String .)
    None            reduce using rule 43 (Y_String -> String .)
    LParen          reduce using rule 43 (Y_String -> String .)
    WftNode         reduce using rule 43 (Y_String -> String .)
    String          reduce using rule 43 (Y_String -> String .)
    Integer         reduce using rule 43 (Y_String -> String .)
    Identifier      reduce using rule 43 (Y_String -> String .)
    RParen          reduce using rule 43 (Y_String -> String .)


state 11

    (44) Y_Integer -> Integer .

    $end            reduce using rule 44 (Y_Integer -> Integer .)
    None            reduce using rule 44 (Y_Integer -> Integer .)
    LParen          reduce using rule 44 (Y_Integer -> Integer .)
    WftNode         reduce using rule 44 (Y_Integer -> Integer .)
    String          reduce using rule 44 (Y_Integer -> Integer .)
    Integer         reduce using rule 44 (Y_Integer -> Integer .)
    Identifier      reduce using rule 44 (Y_Integer -> Integer .)
    RParen          reduce using rule 44 (Y_Integer -> Integer .)


state 12

    (63) Y_Identifier -> Identifier .

    $end            reduce using rule 63 (Y_Identifier -> Identifier .)
    None            reduce using rule 63 (Y_Identifier -> Identifier .)
    LParen          reduce using rule 63 (Y_Identifier -> Identifier .)
    WftNode         reduce using rule 63 (Y_Identifier -> Identifier .)
    String          reduce using rule 63 (Y_Identifier -> Identifier .)
    Integer         reduce using rule 63 (Y_Identifier -> Identifier .)
    Identifier      reduce using rule 63 (Y_Identifier -> Identifier .)
    RParen          reduce using rule 63 (Y_Identifier -> Identifier .)


state 13

    (3) Wft -> LParen Function . Arguments RParen
    (36) Arguments -> . Argument
    (37) Arguments -> . Arguments Argument
    (30) Argument -> . Wft
    (31) Argument -> . None
    (32) Argument -> . LParen ArgumentFunction Wfts RParen
    (1) Wft -> . AtomicWft
    (2) Wft -> . Y_WftNode
    (3) Wft -> . LParen Function Arguments RParen
    (4) Wft -> . LParen BinaryOp Argument Argument RParen
    (5) Wft -> . LParen NaryOp Wfts RParen
    (6) Wft -> . LParen Param2Op Wft Wfts RParen
    (7) Wft -> . LParen Param1Op Wft Wfts RParen
    (8) Wft -> . LParen Y_Close AtomicNameSet Wft RParen
    (9) Wft -> . LParen Y_Every AtomicName Wfts RParen
    (10) Wft -> . LParen SomeCondition Wfts RParen
    (11) Wft -> . LParen Y_QIdentifier Wfts RParen
    (25) AtomicWft -> . AtomicName
    (26) AtomicWft -> . Y_String
    (27) AtomicWft -> . Y_Integer
    (61) Y_WftNode -> . WftNode
    (28) AtomicName -> . Y_Identifier
    (43) Y_String -> . String
    (44) Y_Integer -> . Integer
    (63) Y_Identifier -> . Identifier

    None            shift and go to state 56
    LParen          shift and go to state 52
    WftNode         shift and go to state 8
    String          shift and go to state 10
    Integer         shift and go to state 11
    Identifier      shift and go to state 12

    Arguments                      shift and go to state 53
    Argument                       shift and go to state 54
    Wft                            shift and go to state 55
    AtomicWft                      shift and go to state 2
    Y_WftNode                      shift and go to state 3
    AtomicName                     shift and go to state 5
    Y_String                       shift and go to state 6
    Y_Integer                      shift and go to state 7
    Y_Identifier                   shift and go to state 9

state 14

    (4) Wft -> LParen BinaryOp . Argument Argument RParen
    (30) Argument -> . Wft
    (31) Argument -> . None
    (32) Argument -> . LParen ArgumentFunction Wfts RParen
    (1) Wft -> . AtomicWft
    (2) Wft -> . Y_WftNode
    (3) Wft -> . LParen Function Arguments RParen
    (4) Wft -> . LParen BinaryOp Argument Argument RParen
    (5) Wft -> . LParen NaryOp Wfts RParen
    (6) Wft -> . LParen Param2Op Wft Wfts RParen
    (7) Wft -> . LParen Param1Op Wft Wfts RParen
    (8) Wft -> . LParen Y_Close AtomicNameSet Wft RParen
    (9) Wft -> . LParen Y_Every AtomicName Wfts RParen
    (10) Wft -> . LParen SomeCondition Wfts RParen
    (11) Wft -> . LParen Y_QIdentifier Wfts RParen
    (25) AtomicWft -> . AtomicName
    (26) AtomicWft -> . Y_String
    (27) AtomicWft -> . Y_Integer
    (61) Y_WftNode -> . WftNode
    (28) AtomicName -> . Y_Identifier
    (43) Y_String -> . String
    (44) Y_Integer -> . Integer
    (63) Y_Identifier -> . Identifier

    None            shift and go to state 56
    LParen          shift and go to state 52
    WftNode         shift and go to state 8
    String          shift and go to state 10
    Integer         shift and go to state 11
    Identifier      shift and go to state 12

    Argument                       shift and go to state 57
    Wft                            shift and go to state 55
    AtomicWft                      shift and go to state 2
    Y_WftNode                      shift and go to state 3
    AtomicName                     shift and go to state 5
    Y_String                       shift and go to state 6
    Y_Integer                      shift and go to state 7
    Y_Identifier                   shift and go to state 9

state 15

    (5) Wft -> LParen NaryOp . Wfts RParen
    (34) Wfts -> .
    (35) Wfts -> . Wfts Wft

    RParen          reduce using rule 34 (Wfts -> .)
    LParen          reduce using rule 34 (Wfts -> .)
    WftNode         reduce using rule 34 (Wfts -> .)
    String          reduce using rule 34 (Wfts -> .)
    Integer         reduce using rule 34 (Wfts -> .)
    Identifier      reduce using rule 34 (Wfts -> .)

    Wfts                           shift and go to state 58

state 16

    (6) Wft -> LParen Param2Op . Wft Wfts RParen
    (1) Wft -> . AtomicWft
    (2) Wft -> . Y_WftNode
    (3) Wft -> . LParen Function Arguments RParen
    (4) Wft -> . LParen BinaryOp Argument Argument RParen
    (5) Wft -> . LParen NaryOp Wfts RParen
    (6) Wft -> . LParen Param2Op Wft Wfts RParen
    (7) Wft -> . LParen Param1Op Wft Wfts RParen
    (8) Wft -> . LParen Y_Close AtomicNameSet Wft RParen
    (9) Wft -> . LParen Y_Every AtomicName Wfts RParen
    (10) Wft -> . LParen SomeCondition Wfts RParen
    (11) Wft -> . LParen Y_QIdentifier Wfts RParen
    (25) AtomicWft -> . AtomicName
    (26) AtomicWft -> . Y_String
    (27) AtomicWft -> . Y_Integer
    (61) Y_WftNode -> . WftNode
    (28) AtomicName -> . Y_Identifier
    (43) Y_String -> . String
    (44) Y_Integer -> . Integer
    (63) Y_Identifier -> . Identifier

    LParen          shift and go to state 4
    WftNode         shift and go to state 8
    String          shift and go to state 10
    Integer         shift and go to state 11
    Identifier      shift and go to state 12

    Wft                            shift and go to state 59
    AtomicWft                      shift and go to state 2
    Y_WftNode                      shift and go to state 3
    AtomicName                     shift and go to state 5
    Y_String                       shift and go to state 6
    Y_Integer                      shift and go to state 7
    Y_Identifier                   shift and go to state 9

state 17

    (29) Function -> Wft .

    None            reduce using rule 29 (Function -> Wft .)
    LParen          reduce using rule 29 (Function -> Wft .)
    WftNode         reduce using rule 29 (Function -> Wft .)
    String          reduce using rule 29 (Function -> Wft .)
    Integer         reduce using rule 29 (Function -> Wft .)
    Identifier      reduce using rule 29 (Function -> Wft .)


state 18

    (7) Wft -> LParen Param1Op . Wft Wfts RParen
    (1) Wft -> . AtomicWft
    (2) Wft -> . Y_WftNode
    (3) Wft -> . LParen Function Arguments RParen
    (4) Wft -> . LParen BinaryOp Argument Argument RParen
    (5) Wft -> . LParen NaryOp Wfts RParen
    (6) Wft -> . LParen Param2Op Wft Wfts RParen
    (7) Wft -> . LParen Param1Op Wft Wfts RParen
    (8) Wft -> . LParen Y_Close AtomicNameSet Wft RParen
    (9) Wft -> . LParen Y_Every AtomicName Wfts RParen
    (10) Wft -> . LParen SomeCondition Wfts RParen
    (11) Wft -> . LParen Y_QIdentifier Wfts RParen
    (25) AtomicWft -> . AtomicName
    (26) AtomicWft -> . Y_String
    (27) AtomicWft -> . Y_Integer
    (61) Y_WftNode -> . WftNode
    (28) AtomicName -> . Y_Identifier
    (43) Y_String -> . String
    (44) Y_Integer -> . Integer
    (63) Y_Identifier -> . Identifier

    LParen          shift and go to state 4
    WftNode         shift and go to state 8
    String          shift and go to state 10
    Integer         shift and go to state 11
    Identifier      shift and go to state 12

    Wft                            shift and go to state 60
    AtomicWft                      shift and go to state 2
    Y_WftNode                      shift and go to state 3
    AtomicName                     shift and go to state 5
    Y_String                       shift and go to state 6
    Y_Integer                      shift and go to state 7
    Y_Identifier                   shift and go to state 9

state 19

    (8) Wft -> LParen Y_Close . AtomicNameSet Wft RParen
    (38) AtomicNameSet -> . AtomicName
    (39) AtomicNameSet -> . LParen AtomicName AtomicNames RParen
    (28) AtomicName -> . Y_Identifier
    (63) Y_Identifier -> . Identifier

    LParen          shift and go to state 61
    Identifier      shift and go to state 12

    AtomicNameSet                  shift and go to state 62
    AtomicName                     shift and go to state 63
    Y_Identifier                   shift and go to state 9

state 20

    (9) Wft -> LParen Y_Every . AtomicName Wfts RParen
    (28) AtomicName -> . Y_Identifier
    (63) Y_Identifier -> . Identifier

    Identifier      shift and go to state 12

    AtomicName                     shift and go to state 64
    Y_Identifier                   shift and go to state 9

state 21

    (10) Wft -> LParen SomeCondition . Wfts RParen
    (34) Wfts -> .
    (35) Wfts -> . Wfts Wft

    RParen          reduce using rule 34 (Wfts -> .)
    LParen          reduce using rule 34 (Wfts -> .)
    WftNode         reduce using rule 34 (Wfts -> .)
    String          reduce using rule 34 (Wfts -> .)
    Integer         reduce using rule 34 (Wfts -> .)
    Identifier      reduce using rule 34 (Wfts -> .)

    Wfts                           shift and go to state 65

state 22

    (11) Wft -> LParen Y_QIdentifier . Wfts RParen
    (34) Wfts -> .
    (35) Wfts -> . Wfts Wft

    RParen          reduce using rule 34 (Wfts -> .)
    LParen          reduce using rule 34 (Wfts -> .)
    WftNode         reduce using rule 34 (Wfts -> .)
    String          reduce using rule 34 (Wfts -> .)
    Integer         reduce using rule 34 (Wfts -> .)
    Identifier      reduce using rule 34 (Wfts -> .)

    Wfts                           shift and go to state 66

state 23

    (12) BinaryOp -> Y_Impl .

    None            reduce using rule 12 (BinaryOp -> Y_Impl .)
    LParen          reduce using rule 12 (BinaryOp -> Y_Impl .)
    WftNode         reduce using rule 12 (BinaryOp -> Y_Impl .)
    String          reduce using rule 12 (BinaryOp -> Y_Impl .)
    Integer         reduce using rule 12 (BinaryOp -> Y_Impl .)
    Identifier      reduce using rule 12 (BinaryOp -> Y_Impl .)


state 24

    (13) NaryOp -> Y_And .

    RParen          reduce using rule 13 (NaryOp -> Y_And .)
    LParen          reduce using rule 13 (NaryOp -> Y_And .)
    WftNode         reduce using rule 13 (NaryOp -> Y_And .)
    String          reduce using rule 13 (NaryOp -> Y_And .)
    Integer         reduce using rule 13 (NaryOp -> Y_And .)
    Identifier      reduce using rule 13 (NaryOp -> Y_And .)


state 25

    (14) NaryOp -> Y_Or .

    RParen          reduce using rule 14 (NaryOp -> Y_Or .)
    LParen          reduce using rule 14 (NaryOp -> Y_Or .)
    WftNode         reduce using rule 14 (NaryOp -> Y_Or .)
    String          reduce using rule 14 (NaryOp -> Y_Or .)
    Integer         reduce using rule 14 (NaryOp -> Y_Or .)
    Identifier      reduce using rule 14 (NaryOp -> Y_Or .)


state 26

    (15) NaryOp -> Y_Not .

    RParen          reduce using rule 15 (NaryOp -> Y_Not .)
    LParen          reduce using rule 15 (NaryOp -> Y_Not .)
    WftNode         reduce using rule 15 (NaryOp -> Y_Not .)
    String          reduce using rule 15 (NaryOp -> Y_Not .)
    Integer         reduce using rule 15 (NaryOp -> Y_Not .)
    Identifier      reduce using rule 15 (NaryOp -> Y_Not .)


state 27

    (16) NaryOp -> Y_Nor .

    RParen          reduce using rule 16 (NaryOp -> Y_Nor .)
    LParen          reduce using rule 16 (NaryOp -> Y_Nor .)
    WftNode         reduce using rule 16 (NaryOp -> Y_Nor .)
    String          reduce using rule 16 (NaryOp -> Y_Nor .)
    Integer         reduce using rule 16 (NaryOp -> Y_Nor .)
    Identifier      reduce using rule 16 (NaryOp -> Y_Nor .)


state 28

    (17) NaryOp -> Y_Thnot .

    RParen          reduce using rule 17 (NaryOp -> Y_Thnot .)
    LParen          reduce using rule 17 (NaryOp -> Y_Thnot .)
    WftNode         reduce using rule 17 (NaryOp -> Y_Thnot .)
    String          reduce using rule 17 (NaryOp -> Y_Thnot .)
    Integer         reduce using rule 17 (NaryOp -> Y_Thnot .)
    Identifier      reduce using rule 17 (NaryOp -> Y_Thnot .)


state 29

    (18) NaryOp -> Y_Thnor .

    RParen          reduce using rule 18 (NaryOp -> Y_Thnor .)
    LParen          reduce using rule 18 (NaryOp -> Y_Thnor .)
    WftNode         reduce using rule 18 (NaryOp -> Y_Thnor .)
    String          reduce using rule 18 (NaryOp -> Y_Thnor .)
    Integer         reduce using rule 18 (NaryOp -> Y_Thnor .)
    Identifier      reduce using rule 18 (NaryOp -> Y_Thnor .)


state 30

    (19) NaryOp -> Y_Nand .

    RParen          reduce using rule 19 (NaryOp -> Y_Nand .)
    LParen          reduce using rule 19 (NaryOp -> Y_Nand .)
    WftNode         reduce using rule 19 (NaryOp -> Y_Nand .)
    String          reduce using rule 19 (NaryOp -> Y_Nand .)
    Integer         reduce using rule 19 (NaryOp -> Y_Nand .)
    Identifier      reduce using rule 19 (NaryOp -> Y_Nand .)


state 31

    (20) NaryOp -> Y_Xor .

    RParen          reduce using rule 20 (NaryOp -> Y_Xor .)
    LParen          reduce using rule 20 (NaryOp -> Y_Xor .)
    WftNode         reduce using rule 20 (NaryOp -> Y_Xor .)
    String          reduce using rule 20 (NaryOp -> Y_Xor .)
    Integer         reduce using rule 20 (NaryOp -> Y_Xor .)
    Identifier      reduce using rule 20 (NaryOp -> Y_Xor .)


state 32

    (21) NaryOp -> Y_DoubImpl .

    RParen          reduce using rule 21 (NaryOp -> Y_DoubImpl .)
    LParen          reduce using rule 21 (NaryOp -> Y_DoubImpl .)
    WftNode         reduce using rule 21 (NaryOp -> Y_DoubImpl .)
    String          reduce using rule 21 (NaryOp -> Y_DoubImpl .)
    Integer         reduce using rule 21 (NaryOp -> Y_DoubImpl .)
    Identifier      reduce using rule 21 (NaryOp -> Y_DoubImpl .)


state 33

    (22) Param2Op -> Y_AndOr . LParen Y_Integer Y_Integer RParen

    LParen          shift and go to state 67


state 34

    (23) Param2Op -> Y_Thresh . LParen Y_Integer Y_Integer RParen
    (24) Param1Op -> Y_Thresh . LParen Y_Integer RParen

    LParen          shift and go to state 68


state 35

    (59) Y_Close -> Close .

    LParen          reduce using rule 59 (Y_Close -> Close .)
    Identifier      reduce using rule 59 (Y_Close -> Close .)


state 36

    (57) Y_Every -> Every .

    Identifier      reduce using rule 57 (Y_Every -> Every .)


state 37

    (42) SomeCondition -> Y_Some . AtomicName LParen Wfts RParen
    (28) AtomicName -> . Y_Identifier
    (63) Y_Identifier -> . Identifier

    Identifier      shift and go to state 12

    AtomicName                     shift and go to state 69
    Y_Identifier                   shift and go to state 9

state 38

    (62) Y_QIdentifier -> QIdentifier .

    RParen          reduce using rule 62 (Y_QIdentifier -> QIdentifier .)
    LParen          reduce using rule 62 (Y_QIdentifier -> QIdentifier .)
    WftNode         reduce using rule 62 (Y_QIdentifier -> QIdentifier .)
    String          reduce using rule 62 (Y_QIdentifier -> QIdentifier .)
    Integer         reduce using rule 62 (Y_QIdentifier -> QIdentifier .)
    Identifier      reduce using rule 62 (Y_QIdentifier -> QIdentifier .)


state 39

    (45) Y_Impl -> Impl .

    None            reduce using rule 45 (Y_Impl -> Impl .)
    LParen          reduce using rule 45 (Y_Impl -> Impl .)
    WftNode         reduce using rule 45 (Y_Impl -> Impl .)
    String          reduce using rule 45 (Y_Impl -> Impl .)
    Integer         reduce using rule 45 (Y_Impl -> Impl .)
    Identifier      reduce using rule 45 (Y_Impl -> Impl .)


state 40

    (60) Y_And -> And .

    RParen          reduce using rule 60 (Y_And -> And .)
    LParen          reduce using rule 60 (Y_And -> And .)
    WftNode         reduce using rule 60 (Y_And -> And .)
    String          reduce using rule 60 (Y_And -> And .)
    Integer         reduce using rule 60 (Y_And -> And .)
    Identifier      reduce using rule 60 (Y_And -> And .)


state 41

    (46) Y_Or -> Or .

    RParen          reduce using rule 46 (Y_Or -> Or .)
    LParen          reduce using rule 46 (Y_Or -> Or .)
    WftNode         reduce using rule 46 (Y_Or -> Or .)
    String          reduce using rule 46 (Y_Or -> Or .)
    Integer         reduce using rule 46 (Y_Or -> Or .)
    Identifier      reduce using rule 46 (Y_Or -> Or .)


state 42

    (47) Y_Not -> Not .

    RParen          reduce using rule 47 (Y_Not -> Not .)
    LParen          reduce using rule 47 (Y_Not -> Not .)
    WftNode         reduce using rule 47 (Y_Not -> Not .)
    String          reduce using rule 47 (Y_Not -> Not .)
    Integer         reduce using rule 47 (Y_Not -> Not .)
    Identifier      reduce using rule 47 (Y_Not -> Not .)


state 43

    (48) Y_Nor -> Nor .

    RParen          reduce using rule 48 (Y_Nor -> Nor .)
    LParen          reduce using rule 48 (Y_Nor -> Nor .)
    WftNode         reduce using rule 48 (Y_Nor -> Nor .)
    String          reduce using rule 48 (Y_Nor -> Nor .)
    Integer         reduce using rule 48 (Y_Nor -> Nor .)
    Identifier      reduce using rule 48 (Y_Nor -> Nor .)


state 44

    (49) Y_Thnot -> Thnot .

    RParen          reduce using rule 49 (Y_Thnot -> Thnot .)
    LParen          reduce using rule 49 (Y_Thnot -> Thnot .)
    WftNode         reduce using rule 49 (Y_Thnot -> Thnot .)
    String          reduce using rule 49 (Y_Thnot -> Thnot .)
    Integer         reduce using rule 49 (Y_Thnot -> Thnot .)
    Identifier      reduce using rule 49 (Y_Thnot -> Thnot .)


state 45

    (50) Y_Thnor -> Thnor .

    RParen          reduce using rule 50 (Y_Thnor -> Thnor .)
    LParen          reduce using rule 50 (Y_Thnor -> Thnor .)
    WftNode         reduce using rule 50 (Y_Thnor -> Thnor .)
    String          reduce using rule 50 (Y_Thnor -> Thnor .)
    Integer         reduce using rule 50 (Y_Thnor -> Thnor .)
    Identifier      reduce using rule 50 (Y_Thnor -> Thnor .)


state 46

    (51) Y_Nand -> Nand .

    RParen          reduce using rule 51 (Y_Nand -> Nand .)
    LParen          reduce using rule 51 (Y_Nand -> Nand .)
    WftNode         reduce using rule 51 (Y_Nand -> Nand .)
    String          reduce using rule 51 (Y_Nand -> Nand .)
    Integer         reduce using rule 51 (Y_Nand -> Nand .)
    Identifier      reduce using rule 51 (Y_Nand -> Nand .)


state 47

    (52) Y_Xor -> Xor .

    RParen          reduce using rule 52 (Y_Xor -> Xor .)
    LParen          reduce using rule 52 (Y_Xor -> Xor .)
    WftNode         reduce using rule 52 (Y_Xor -> Xor .)
    String          reduce using rule 52 (Y_Xor -> Xor .)
    Integer         reduce using rule 52 (Y_Xor -> Xor .)
    Identifier      reduce using rule 52 (Y_Xor -> Xor .)


state 48

    (53) Y_DoubImpl -> DoubImpl .

    RParen          reduce using rule 53 (Y_DoubImpl -> DoubImpl .)
    LParen          reduce using rule 53 (Y_DoubImpl -> DoubImpl .)
    WftNode         reduce using rule 53 (Y_DoubImpl -> DoubImpl .)
    String          reduce using rule 53 (Y_DoubImpl -> DoubImpl .)
    Integer         reduce using rule 53 (Y_DoubImpl -> DoubImpl .)
    Identifier      reduce using rule 53 (Y_DoubImpl -> DoubImpl .)


state 49

    (54) Y_AndOr -> AndOr .

    LParen          reduce using rule 54 (Y_AndOr -> AndOr .)


state 50

    (55) Y_Thresh -> Thresh .

    LParen          reduce using rule 55 (Y_Thresh -> Thresh .)


state 51

    (58) Y_Some -> Some .

    Identifier      reduce using rule 58 (Y_Some -> Some .)


state 52

    (32) Argument -> LParen . ArgumentFunction Wfts RParen
    (3) Wft -> LParen . Function Arguments RParen
    (4) Wft -> LParen . BinaryOp Argument Argument RParen
    (5) Wft -> LParen . NaryOp Wfts RParen
    (6) Wft -> LParen . Param2Op Wft Wfts RParen
    (7) Wft -> LParen . Param1Op Wft Wfts RParen
    (8) Wft -> LParen . Y_Close AtomicNameSet Wft RParen
    (9) Wft -> LParen . Y_Every AtomicName Wfts RParen
    (10) Wft -> LParen . SomeCondition Wfts RParen
    (11) Wft -> LParen . Y_QIdentifier Wfts RParen
    (33) ArgumentFunction -> . Y_SetOf
    (29) Function -> . Wft
    (12) BinaryOp -> . Y_Impl
    (13) NaryOp -> . Y_And
    (14) NaryOp -> . Y_Or
    (15) NaryOp -> . Y_Not
    (16) NaryOp -> . Y_Nor
    (17) NaryOp -> . Y_Thnot
    (18) NaryOp -> . Y_Thnor
    (19) NaryOp -> . Y_Nand
    (20) NaryOp -> . Y_Xor
    (21) NaryOp -> . Y_DoubImpl
    (22) Param2Op -> . Y_AndOr LParen Y_Integer Y_Integer RParen
    (23) Param2Op -> . Y_Thresh LParen Y_Integer Y_Integer RParen
    (24) Param1Op -> . Y_Thresh LParen Y_Integer RParen
    (59) Y_Close -> . Close
    (57) Y_Every -> . Every
    (42) SomeCondition -> . Y_Some AtomicName LParen Wfts RParen
    (62) Y_QIdentifier -> . QIdentifier
    (56) Y_SetOf -> . SetOf
    (1) Wft -> . AtomicWft
    (2) Wft -> . Y_WftNode
    (3) Wft -> . LParen Function Arguments RParen
    (4) Wft -> . LParen BinaryOp Argument Argument RParen
    (5) Wft -> . LParen NaryOp Wfts RParen
    (6) Wft -> . LParen Param2Op Wft Wfts RParen
    (7) Wft -> . LParen Param1Op Wft Wfts RParen
    (8) Wft -> . LParen Y_Close AtomicNameSet Wft RParen
    (9) Wft -> . LParen Y_Every AtomicName Wfts RParen
    (10) Wft -> . LParen SomeCondition Wfts RParen
    (11) Wft -> . LParen Y_QIdentifier Wfts RParen
    (45) Y_Impl -> . Impl
    (60) Y_And -> . And
    (46) Y_Or -> . Or
    (47) Y_Not -> . Not
    (48) Y_Nor -> . Nor
    (49) Y_Thnot -> . Thnot
    (50) Y_Thnor -> . Thnor
    (51) Y_Nand -> . Nand
    (52) Y_Xor -> . Xor
    (53) Y_DoubImpl -> . DoubImpl
    (54) Y_AndOr -> . AndOr
    (55) Y_Thresh -> . Thresh
    (58) Y_Some -> . Some
    (25) AtomicWft -> . AtomicName
    (26) AtomicWft -> . Y_String
    (27) AtomicWft -> . Y_Integer
    (61) Y_WftNode -> . WftNode
    (28) AtomicName -> . Y_Identifier
    (43) Y_String -> . String
    (44) Y_Integer -> . Integer
    (63) Y_Identifier -> . Identifier

    Close           shift and go to state 35
    Every           shift and go to state 36
    QIdentifier     shift and go to state 38
    SetOf           shift and go to state 72
    LParen          shift and go to state 4
    Impl            shift and go to state 39
    And             shift and go to state 40
    Or              shift and go to state 41
    Not             shift and go to state 42
    Nor             shift and go to state 43
    Thnot           shift and go to state 44
    Thnor           shift and go to state 45
    Nand            shift and go to state 46
    Xor             shift and go to state 47
    DoubImpl        shift and go to state 48
    AndOr           shift and go to state 49
    Thresh          shift and go to state 50
    Some            shift and go to state 51
    WftNode         shift and go to state 8
    String          shift and go to state 10
    Integer         shift and go to state 11
    Identifier      shift and go to state 12

    ArgumentFunction               shift and go to state 70
    Function                       shift and go to state 13
    BinaryOp                       shift and go to state 14
    NaryOp                         shift and go to state 15
    Param2Op                       shift and go to state 16
    Wft                            shift and go to state 17
    Param1Op                       shift and go to state 18
    Y_Close                        shift and go to state 19
    Y_Every                        shift and go to state 20
    AtomicName                     shift and go to state 5
    SomeCondition                  shift and go to state 21
    Y_QIdentifier                  shift and go to state 22
    Y_SetOf                        shift and go to state 71
    Y_Impl                         shift and go to state 23
    Y_And                          shift and go to state 24
    Y_Or                           shift and go to state 25
    Y_Not                          shift and go to state 26
    Y_Nor                          shift and go to state 27
    Y_Thnot                        shift and go to state 28
    Y_Thnor                        shift and go to state 29
    Y_Nand                         shift and go to state 30
    Y_Xor                          shift and go to state 31
    Y_DoubImpl                     shift and go to state 32
    Y_AndOr                        shift and go to state 33
    Y_Integer                      shift and go to state 7
    Y_Thresh                       shift and go to state 34
    Y_Some                         shift and go to state 37
    AtomicWft                      shift and go to state 2
    Y_WftNode                      shift and go to state 3
    Y_String                       shift and go to state 6
    Y_Identifier                   shift and go to state 9

state 53

    (3) Wft -> LParen Function Arguments . RParen
    (37) Arguments -> Arguments . Argument
    (30) Argument -> . Wft
    (31) Argument -> . None
    (32) Argument -> . LParen ArgumentFunction Wfts RParen
    (1) Wft -> . AtomicWft
    (2) Wft -> . Y_WftNode
    (3) Wft -> . LParen Function Arguments RParen
    (4) Wft -> . LParen BinaryOp Argument Argument RParen
    (5) Wft -> . LParen NaryOp Wfts RParen
    (6) Wft -> . LParen Param2Op Wft Wfts RParen
    (7) Wft -> . LParen Param1Op Wft Wfts RParen
    (8) Wft -> . LParen Y_Close AtomicNameSet Wft RParen
    (9) Wft -> . LParen Y_Every AtomicName Wfts RParen
    (10) Wft -> . LParen SomeCondition Wfts RParen
    (11) Wft -> . LParen Y_QIdentifier Wfts RParen
    (25) AtomicWft -> . AtomicName
    (26) AtomicWft -> . Y_String
    (27) AtomicWft -> . Y_Integer
    (61) Y_WftNode -> . WftNode
    (28) AtomicName -> . Y_Identifier
    (43) Y_String -> . String
    (44) Y_Integer -> . Integer
    (63) Y_Identifier -> . Identifier

    RParen          shift and go to state 73
    None            shift and go to state 56
    LParen          shift and go to state 52
    WftNode         shift and go to state 8
    String          shift and go to state 10
    Integer         shift and go to state 11
    Identifier      shift and go to state 12

    Argument                       shift and go to state 74
    Wft                            shift and go to state 55
    AtomicWft                      shift and go to state 2
    Y_WftNode                      shift and go to state 3
    AtomicName                     shift and go to state 5
    Y_String                       shift and go to state 6
    Y_Integer                      shift and go to state 7
    Y_Identifier                   shift and go to state 9

state 54

    (36) Arguments -> Argument .

    RParen          reduce using rule 36 (Arguments -> Argument .)
    None            reduce using rule 36 (Arguments -> Argument .)
    LParen          reduce using rule 36 (Arguments -> Argument .)
    WftNode         reduce using rule 36 (Arguments -> Argument .)
    String          reduce using rule 36 (Arguments -> Argument .)
    Integer         reduce using rule 36 (Arguments -> Argument .)
    Identifier      reduce using rule 36 (Arguments -> Argument .)


state 55

    (30) Argument -> Wft .

    RParen          reduce using rule 30 (Argument -> Wft .)
    None            reduce using rule 30 (Argument -> Wft .)
    LParen          reduce using rule 30 (Argument -> Wft .)
    WftNode         reduce using rule 30 (Argument -> Wft .)
    String          reduce using rule 30 (Argument -> Wft .)
    Integer         reduce using rule 30 (Argument -> Wft .)
    Identifier      reduce using rule 30 (Argument -> Wft .)


state 56

    (31) Argument -> None .

    RParen          reduce using rule 31 (Argument -> None .)
    None            reduce using rule 31 (Argument -> None .)
    LParen          reduce using rule 31 (Argument -> None .)
    WftNode         reduce using rule 31 (Argument -> None .)
    String          reduce using rule 31 (Argument -> None .)
    Integer         reduce using rule 31 (Argument -> None .)
    Identifier      reduce using rule 31 (Argument -> None .)


state 57

    (4) Wft -> LParen BinaryOp Argument . Argument RParen
    (30) Argument -> . Wft
    (31) Argument -> . None
    (32) Argument -> . LParen ArgumentFunction Wfts RParen
    (1) Wft -> . AtomicWft
    (2) Wft -> . Y_WftNode
    (3) Wft -> . LParen Function Arguments RParen
    (4) Wft -> . LParen BinaryOp Argument Argument RParen
    (5) Wft -> . LParen NaryOp Wfts RParen
    (6) Wft -> . LParen Param2Op Wft Wfts RParen
    (7) Wft -> . LParen Param1Op Wft Wfts RParen
    (8) Wft -> . LParen Y_Close AtomicNameSet Wft RParen
    (9) Wft -> . LParen Y_Every AtomicName Wfts RParen
    (10) Wft -> . LParen SomeCondition Wfts RParen
    (11) Wft -> . LParen Y_QIdentifier Wfts RParen
    (25) AtomicWft -> . AtomicName
    (26) AtomicWft -> . Y_String
    (27) AtomicWft -> . Y_Integer
    (61) Y_WftNode -> . WftNode
    (28) AtomicName -> . Y_Identifier
    (43) Y_String -> . String
    (44) Y_Integer -> . Integer
    (63) Y_Identifier -> . Identifier

    None            shift and go to state 56
    LParen          shift and go to state 52
    WftNode         shift and go to state 8
    String          shift and go to state 10
    Integer         shift and go to state 11
    Identifier      shift and go to state 12

    Argument                       shift and go to state 75
    Wft                            shift and go to state 55
    AtomicWft                      shift and go to state 2
    Y_WftNode                      shift and go to state 3
    AtomicName                     shift and go to state 5
    Y_String                       shift and go to state 6
    Y_Integer                      shift and go to state 7
    Y_Identifier                   shift and go to state 9

state 58

    (5) Wft -> LParen NaryOp Wfts . RParen
    (35) Wfts -> Wfts . Wft
    (1) Wft -> . AtomicWft
    (2) Wft -> . Y_WftNode
    (3) Wft -> . LParen Function Arguments RParen
    (4) Wft -> . LParen BinaryOp Argument Argument RParen
    (5) Wft -> . LParen NaryOp Wfts RParen
    (6) Wft -> . LParen Param2Op Wft Wfts RParen
    (7) Wft -> . LParen Param1Op Wft Wfts RParen
    (8) Wft -> . LParen Y_Close AtomicNameSet Wft RParen
    (9) Wft -> . LParen Y_Every AtomicName Wfts RParen
    (10) Wft -> . LParen SomeCondition Wfts RParen
    (11) Wft -> . LParen Y_QIdentifier Wfts RParen
    (25) AtomicWft -> . AtomicName
    (26) AtomicWft -> . Y_String
    (27) AtomicWft -> . Y_Integer
    (61) Y_WftNode -> . WftNode
    (28) AtomicName -> . Y_Identifier
    (43) Y_String -> . String
    (44) Y_Integer -> . Integer
    (63) Y_Identifier -> . Identifier

    RParen          shift and go to state 76
    LParen          shift and go to state 4
    WftNode         shift and go to state 8
    String          shift and go to state 10
    Integer         shift and go to state 11
    Identifier      shift and go to state 12

    Wft                            shift and go to state 77
    AtomicWft                      shift and go to state 2
    Y_WftNode                      shift and go to state 3
    AtomicName                     shift and go to state 5
    Y_String                       shift and go to state 6
    Y_Integer                      shift and go to state 7
    Y_Identifier                   shift and go to state 9

state 59

    (6) Wft -> LParen Param2Op Wft . Wfts RParen
    (34) Wfts -> .
    (35) Wfts -> . Wfts Wft

    RParen          reduce using rule 34 (Wfts -> .)
    LParen          reduce using rule 34 (Wfts -> .)
    WftNode         reduce using rule 34 (Wfts -> .)
    String          reduce using rule 34 (Wfts -> .)
    Integer         reduce using rule 34 (Wfts -> .)
    Identifier      reduce using rule 34 (Wfts -> .)

    Wfts                           shift and go to state 78

state 60

    (7) Wft -> LParen Param1Op Wft . Wfts RParen
    (34) Wfts -> .
    (35) Wfts -> . Wfts Wft

    RParen          reduce using rule 34 (Wfts -> .)
    LParen          reduce using rule 34 (Wfts -> .)
    WftNode         reduce using rule 34 (Wfts -> .)
    String          reduce using rule 34 (Wfts -> .)
    Integer         reduce using rule 34 (Wfts -> .)
    Identifier      reduce using rule 34 (Wfts -> .)

    Wfts                           shift and go to state 79

state 61

    (39) AtomicNameSet -> LParen . AtomicName AtomicNames RParen
    (28) AtomicName -> . Y_Identifier
    (63) Y_Identifier -> . Identifier

    Identifier      shift and go to state 12

    AtomicName                     shift and go to state 80
    Y_Identifier                   shift and go to state 9

state 62

    (8) Wft -> LParen Y_Close AtomicNameSet . Wft RParen
    (1) Wft -> . AtomicWft
    (2) Wft -> . Y_WftNode
    (3) Wft -> . LParen Function Arguments RParen
    (4) Wft -> . LParen BinaryOp Argument Argument RParen
    (5) Wft -> . LParen NaryOp Wfts RParen
    (6) Wft -> . LParen Param2Op Wft Wfts RParen
    (7) Wft -> . LParen Param1Op Wft Wfts RParen
    (8) Wft -> . LParen Y_Close AtomicNameSet Wft RParen
    (9) Wft -> . LParen Y_Every AtomicName Wfts RParen
    (10) Wft -> . LParen SomeCondition Wfts RParen
    (11) Wft -> . LParen Y_QIdentifier Wfts RParen
    (25) AtomicWft -> . AtomicName
    (26) AtomicWft -> . Y_String
    (27) AtomicWft -> . Y_Integer
    (61) Y_WftNode -> . WftNode
    (28) AtomicName -> . Y_Identifier
    (43) Y_String -> . String
    (44) Y_Integer -> . Integer
    (63) Y_Identifier -> . Identifier

    LParen          shift and go to state 4
    WftNode         shift and go to state 8
    String          shift and go to state 10
    Integer         shift and go to state 11
    Identifier      shift and go to state 12

    Wft                            shift and go to state 81
    AtomicWft                      shift and go to state 2
    Y_WftNode                      shift and go to state 3
    AtomicName                     shift and go to state 5
    Y_String                       shift and go to state 6
    Y_Integer                      shift and go to state 7
    Y_Identifier                   shift and go to state 9

state 63

    (38) AtomicNameSet -> AtomicName .

    LParen          reduce using rule 38 (AtomicNameSet -> AtomicName .)
    WftNode         reduce using rule 38 (AtomicNameSet -> AtomicName .)
    String          reduce using rule 38 (AtomicNameSet -> AtomicName .)
    Integer         reduce using rule 38 (AtomicNameSet -> AtomicName .)
    Identifier      reduce using rule 38 (AtomicNameSet -> AtomicName .)


state 64

    (9) Wft -> LParen Y_Every AtomicName . Wfts RParen
    (34) Wfts -> .
    (35) Wfts -> . Wfts Wft

    RParen          reduce using rule 34 (Wfts -> .)
    LParen          reduce using rule 34 (Wfts -> .)
    WftNode         reduce using rule 34 (Wfts -> .)
    String          reduce using rule 34 (Wfts -> .)
    Integer         reduce using rule 34 (Wfts -> .)
    Identifier      reduce using rule 34 (Wfts -> .)

    Wfts                           shift and go to state 82

state 65

    (10) Wft -> LParen SomeCondition Wfts . RParen
    (35) Wfts -> Wfts . Wft
    (1) Wft -> . AtomicWft
    (2) Wft -> . Y_WftNode
    (3) Wft -> . LParen Function Arguments RParen
    (4) Wft -> . LParen BinaryOp Argument Argument RParen
    (5) Wft -> . LParen NaryOp Wfts RParen
    (6) Wft -> . LParen Param2Op Wft Wfts RParen
    (7) Wft -> . LParen Param1Op Wft Wfts RParen
    (8) Wft -> . LParen Y_Close AtomicNameSet Wft RParen
    (9) Wft -> . LParen Y_Every AtomicName Wfts RParen
    (10) Wft -> . LParen SomeCondition Wfts RParen
    (11) Wft -> . LParen Y_QIdentifier Wfts RParen
    (25) AtomicWft -> . AtomicName
    (26) AtomicWft -> . Y_String
    (27) AtomicWft -> . Y_Integer
    (61) Y_WftNode -> . WftNode
    (28) AtomicName -> . Y_Identifier
    (43) Y_String -> . String
    (44) Y_Integer -> . Integer
    (63) Y_Identifier -> . Identifier

    RParen          shift and go to state 83
    LParen          shift and go to state 4
    WftNode         shift and go to state 8
    String          shift and go to state 10
    Integer         shift and go to state 11
    Identifier      shift and go to state 12

    Wft                            shift and go to state 77
    AtomicWft                      shift and go to state 2
    Y_WftNode                      shift and go to state 3
    AtomicName                     shift and go to state 5
    Y_String                       shift and go to state 6
    Y_Integer                      shift and go to state 7
    Y_Identifier                   shift and go to state 9

state 66

    (11) Wft -> LParen Y_QIdentifier Wfts . RParen
    (35) Wfts -> Wfts . Wft
    (1) Wft -> . AtomicWft
    (2) Wft -> . Y_WftNode
    (3) Wft -> . LParen Function Arguments RParen
    (4) Wft -> . LParen BinaryOp Argument Argument RParen
    (5) Wft -> . LParen NaryOp Wfts RParen
    (6) Wft -> . LParen Param2Op Wft Wfts RParen
    (7) Wft -> . LParen Param1Op Wft Wfts RParen
    (8) Wft -> . LParen Y_Close AtomicNameSet Wft RParen
    (9) Wft -> . LParen Y_Every AtomicName Wfts RParen
    (10) Wft -> . LParen SomeCondition Wfts RParen
    (11) Wft -> . LParen Y_QIdentifier Wfts RParen
    (25) AtomicWft -> . AtomicName
    (26) AtomicWft -> . Y_String
    (27) AtomicWft -> . Y_Integer
    (61) Y_WftNode -> . WftNode
    (28) AtomicName -> . Y_Identifier
    (43) Y_String -> . String
    (44) Y_Integer -> . Integer
    (63) Y_Identifier -> . Identifier

    RParen          shift and go to state 84
    LParen          shift and go to state 4
    WftNode         shift and go to state 8
    String          shift and go to state 10
    Integer         shift and go to state 11
    Identifier      shift and go to state 12

    Wft                            shift and go to state 77
    AtomicWft                      shift and go to state 2
    Y_WftNode                      shift and go to state 3
    AtomicName                     shift and go to state 5
    Y_String                       shift and go to state 6
    Y_Integer                      shift and go to state 7
    Y_Identifier                   shift and go to state 9

state 67

    (22) Param2Op -> Y_AndOr LParen . Y_Integer Y_Integer RParen
    (44) Y_Integer -> . Integer

    Integer         shift and go to state 11

    Y_Integer                      shift and go to state 85

state 68

    (23) Param2Op -> Y_Thresh LParen . Y_Integer Y_Integer RParen
    (24) Param1Op -> Y_Thresh LParen . Y_Integer RParen
    (44) Y_Integer -> . Integer

    Integer         shift and go to state 11

    Y_Integer                      shift and go to state 86

state 69

    (42) SomeCondition -> Y_Some AtomicName . LParen Wfts RParen

    LParen          shift and go to state 87


state 70

    (32) Argument -> LParen ArgumentFunction . Wfts RParen
    (34) Wfts -> .
    (35) Wfts -> . Wfts Wft

    RParen          reduce using rule 34 (Wfts -> .)
    LParen          reduce using rule 34 (Wfts -> .)
    WftNode         reduce using rule 34 (Wfts -> .)
    String          reduce using rule 34 (Wfts -> .)
    Integer         reduce using rule 34 (Wfts -> .)
    Identifier      reduce using rule 34 (Wfts -> .)

    Wfts                           shift and go to state 88

state 71

    (33) ArgumentFunction -> Y_SetOf .

    RParen          reduce using rule 33 (ArgumentFunction -> Y_SetOf .)
    LParen          reduce using rule 33 (ArgumentFunction -> Y_SetOf .)
    WftNode         reduce using rule 33 (ArgumentFunction -> Y_SetOf .)
    String          reduce using rule 33 (ArgumentFunction -> Y_SetOf .)
    Integer         reduce using rule 33 (ArgumentFunction -> Y_SetOf .)
    Identifier      reduce using rule 33 (ArgumentFunction -> Y_SetOf .)


state 72

    (56) Y_SetOf -> SetOf .

    RParen          reduce using rule 56 (Y_SetOf -> SetOf .)
    LParen          reduce using rule 56 (Y_SetOf -> SetOf .)
    WftNode         reduce using rule 56 (Y_SetOf -> SetOf .)
    String          reduce using rule 56 (Y_SetOf -> SetOf .)
    Integer         reduce using rule 56 (Y_SetOf -> SetOf .)
    Identifier      reduce using rule 56 (Y_SetOf -> SetOf .)


state 73

    (3) Wft -> LParen Function Arguments RParen .

    $end            reduce using rule 3 (Wft -> LParen Function Arguments RParen .)
    None            reduce using rule 3 (Wft -> LParen Function Arguments RParen .)
    LParen          reduce using rule 3 (Wft -> LParen Function Arguments RParen .)
    WftNode         reduce using rule 3 (Wft -> LParen Function Arguments RParen .)
    String          reduce using rule 3 (Wft -> LParen Function Arguments RParen .)
    Integer         reduce using rule 3 (Wft -> LParen Function Arguments RParen .)
    Identifier      reduce using rule 3 (Wft -> LParen Function Arguments RParen .)
    RParen          reduce using rule 3 (Wft -> LParen Function Arguments RParen .)


state 74

    (37) Arguments -> Arguments Argument .

    RParen          reduce using rule 37 (Arguments -> Arguments Argument .)
    None            reduce using rule 37 (Arguments -> Arguments Argument .)
    LParen          reduce using rule 37 (Arguments -> Arguments Argument .)
    WftNode         reduce using rule 37 (Arguments -> Arguments Argument .)
    String          reduce using rule 37 (Arguments -> Arguments Argument .)
    Integer         reduce using rule 37 (Arguments -> Arguments Argument .)
    Identifier      reduce using rule 37 (Arguments -> Arguments Argument .)


state 75

    (4) Wft -> LParen BinaryOp Argument Argument . RParen

    RParen          shift and go to state 89


state 76

    (5) Wft -> LParen NaryOp Wfts RParen .

    $end            reduce using rule 5 (Wft -> LParen NaryOp Wfts RParen .)
    None            reduce using rule 5 (Wft -> LParen NaryOp Wfts RParen .)
    LParen          reduce using rule 5 (Wft -> LParen NaryOp Wfts RParen .)
    WftNode         reduce using rule 5 (Wft -> LParen NaryOp Wfts RParen .)
    String          reduce using rule 5 (Wft -> LParen NaryOp Wfts RParen .)
    Integer         reduce using rule 5 (Wft -> LParen NaryOp Wfts RParen .)
    Identifier      reduce using rule 5 (Wft -> LParen NaryOp Wfts RParen .)
    RParen          reduce using rule 5 (Wft -> LParen NaryOp Wfts RParen .)


state 77

    (35) Wfts -> Wfts Wft .

    RParen          reduce using rule 35 (Wfts -> Wfts Wft .)
    LParen          reduce using rule 35 (Wfts -> Wfts Wft .)
    WftNode         reduce using rule 35 (Wfts -> Wfts Wft .)
    String          reduce using rule 35 (Wfts -> Wfts Wft .)
    Integer         reduce using rule 35 (Wfts -> Wfts Wft .)
    Identifier      reduce using rule 35 (Wfts -> Wfts Wft .)


state 78

    (6) Wft -> LParen Param2Op Wft Wfts . RParen
    (35) Wfts -> Wfts . Wft
    (1) Wft -> . AtomicWft
    (2) Wft -> . Y_WftNode
    (3) Wft -> . LParen Function Arguments RParen
    (4) Wft -> . LParen BinaryOp Argument Argument RParen
    (5) Wft -> . LParen NaryOp Wfts RParen
    (6) Wft -> . LParen Param2Op Wft Wfts RParen
    (7) Wft -> . LParen Param1Op Wft Wfts RParen
    (8) Wft -> . LParen Y_Close AtomicNameSet Wft RParen
    (9) Wft -> . LParen Y_Every AtomicName Wfts RParen
    (10) Wft -> . LParen SomeCondition Wfts RParen
    (11) Wft -> . LParen Y_QIdentifier Wfts RParen
    (25) AtomicWft -> . AtomicName
    (26) AtomicWft -> . Y_String
    (27) AtomicWft -> . Y_Integer
    (61) Y_WftNode -> . WftNode
    (28) AtomicName -> . Y_Identifier
    (43) Y_String -> . String
    (44) Y_Integer -> . Integer
    (63) Y_Identifier -> . Identifier

    RParen          shift and go to state 90
    LParen          shift and go to state 4
    WftNode         shift and go to state 8
    String          shift and go to state 10
    Integer         shift and go to state 11
    Identifier      shift and go to state 12

    Wft                            shift and go to state 77
    AtomicWft                      shift and go to state 2
    Y_WftNode                      shift and go to state 3
    AtomicName                     shift and go to state 5
    Y_String                       shift and go to state 6
    Y_Integer                      shift and go to state 7
    Y_Identifier                   shift and go to state 9

state 79

    (7) Wft -> LParen Param1Op Wft Wfts . RParen
    (35) Wfts -> Wfts . Wft
    (1) Wft -> . AtomicWft
    (2) Wft -> . Y_WftNode
    (3) Wft -> . LParen Function Arguments RParen
    (4) Wft -> . LParen BinaryOp Argument Argument RParen
    (5) Wft -> . LParen NaryOp Wfts RParen
    (6) Wft -> . LParen Param2Op Wft Wfts RParen
    (7) Wft -> . LParen Param1Op Wft Wfts RParen
    (8) Wft -> . LParen Y_Close AtomicNameSet Wft RParen
    (9) Wft -> . LParen Y_Every AtomicName Wfts RParen
    (10) Wft -> . LParen SomeCondition Wfts RParen
    (11) Wft -> . LParen Y_QIdentifier Wfts RParen
    (25) AtomicWft -> . AtomicName
    (26) AtomicWft -> . Y_String
    (27) AtomicWft -> . Y_Integer
    (61) Y_WftNode -> . WftNode
    (28) AtomicName -> . Y_Identifier
    (43) Y_String -> . String
    (44) Y_Integer -> . Integer
    (63) Y_Identifier -> . Identifier

    RParen          shift and go to state 91
    LParen          shift and go to state 4
    WftNode         shift and go to state 8
    String          shift and go to state 10
    Integer         shift and go to state 11
    Identifier      shift and go to state 12

    Wft                            shift and go to state 77
    AtomicWft                      shift and go to state 2
    Y_WftNode                      shift and go to state 3
    AtomicName                     shift and go to state 5
    Y_String                       shift and go to state 6
    Y_Integer                      shift and go to state 7
    Y_Identifier                   shift and go to state 9

state 80

    (39) AtomicNameSet -> LParen AtomicName . AtomicNames RParen
    (40) AtomicNames -> .
    (41) AtomicNames -> . AtomicName AtomicNames
    (28) AtomicName -> . Y_Identifier
    (63) Y_Identifier -> . Identifier

    RParen          reduce using rule 40 (AtomicNames -> .)
    Identifier      shift and go to state 12

    AtomicName                     shift and go to state 92
    AtomicNames                    shift and go to state 93
    Y_Identifier                   shift and go to state 9

state 81

    (8) Wft -> LParen Y_Close AtomicNameSet Wft . RParen

    RParen          shift and go to state 94


state 82

    (9) Wft -> LParen Y_Every AtomicName Wfts . RParen
    (35) Wfts -> Wfts . Wft
    (1) Wft -> . AtomicWft
    (2) Wft -> . Y_WftNode
    (3) Wft -> . LParen Function Arguments RParen
    (4) Wft -> . LParen BinaryOp Argument Argument RParen
    (5) Wft -> . LParen NaryOp Wfts RParen
    (6) Wft -> . LParen Param2Op Wft Wfts RParen
    (7) Wft -> . LParen Param1Op Wft Wfts RParen
    (8) Wft -> . LParen Y_Close AtomicNameSet Wft RParen
    (9) Wft -> . LParen Y_Every AtomicName Wfts RParen
    (10) Wft -> . LParen SomeCondition Wfts RParen
    (11) Wft -> . LParen Y_QIdentifier Wfts RParen
    (25) AtomicWft -> . AtomicName
    (26) AtomicWft -> . Y_String
    (27) AtomicWft -> . Y_Integer
    (61) Y_WftNode -> . WftNode
    (28) AtomicName -> . Y_Identifier
    (43) Y_String -> . String
    (44) Y_Integer -> . Integer
    (63) Y_Identifier -> . Identifier

    RParen          shift and go to state 95
    LParen          shift and go to state 4
    WftNode         shift and go to state 8
    String          shift and go to state 10
    Integer         shift and go to state 11
    Identifier      shift and go to state 12

    AtomicName                     shift and go to state 5
    Wft                            shift and go to state 77
    AtomicWft                      shift and go to state 2
    Y_WftNode                      shift and go to state 3
    Y_String                       shift and go to state 6
    Y_Integer                      shift and go to state 7
    Y_Identifier                   shift and go to state 9

state 83

    (10) Wft -> LParen SomeCondition Wfts RParen .

    $end            reduce using rule 10 (Wft -> LParen SomeCondition Wfts RParen .)
    None            reduce using rule 10 (Wft -> LParen SomeCondition Wfts RParen .)
    LParen          reduce using rule 10 (Wft -> LParen SomeCondition Wfts RParen .)
    WftNode         reduce using rule 10 (Wft -> LParen SomeCondition Wfts RParen .)
    String          reduce using rule 10 (Wft -> LParen SomeCondition Wfts RParen .)
    Integer         reduce using rule 10 (Wft -> LParen SomeCondition Wfts RParen .)
    Identifier      reduce using rule 10 (Wft -> LParen SomeCondition Wfts RParen .)
    RParen          reduce using rule 10 (Wft -> LParen SomeCondition Wfts RParen .)


state 84

    (11) Wft -> LParen Y_QIdentifier Wfts RParen .

    $end            reduce using rule 11 (Wft -> LParen Y_QIdentifier Wfts RParen .)
    None            reduce using rule 11 (Wft -> LParen Y_QIdentifier Wfts RParen .)
    LParen          reduce using rule 11 (Wft -> LParen Y_QIdentifier Wfts RParen .)
    WftNode         reduce using rule 11 (Wft -> LParen Y_QIdentifier Wfts RParen .)
    String          reduce using rule 11 (Wft -> LParen Y_QIdentifier Wfts RParen .)
    Integer         reduce using rule 11 (Wft -> LParen Y_QIdentifier Wfts RParen .)
    Identifier      reduce using rule 11 (Wft -> LParen Y_QIdentifier Wfts RParen .)
    RParen          reduce using rule 11 (Wft -> LParen Y_QIdentifier Wfts RParen .)


state 85

    (22) Param2Op -> Y_AndOr LParen Y_Integer . Y_Integer RParen
    (44) Y_Integer -> . Integer

    Integer         shift and go to state 11

    Y_Integer                      shift and go to state 96

state 86

    (23) Param2Op -> Y_Thresh LParen Y_Integer . Y_Integer RParen
    (24) Param1Op -> Y_Thresh LParen Y_Integer . RParen
    (44) Y_Integer -> . Integer

    RParen          shift and go to state 98
    Integer         shift and go to state 11

    Y_Integer                      shift and go to state 97

state 87

    (42) SomeCondition -> Y_Some AtomicName LParen . Wfts RParen
    (34) Wfts -> .
    (35) Wfts -> . Wfts Wft

    RParen          reduce using rule 34 (Wfts -> .)
    LParen          reduce using rule 34 (Wfts -> .)
    WftNode         reduce using rule 34 (Wfts -> .)
    String          reduce using rule 34 (Wfts -> .)
    Integer         reduce using rule 34 (Wfts -> .)
    Identifier      reduce using rule 34 (Wfts -> .)

    Wfts                           shift and go to state 99

state 88

    (32) Argument -> LParen ArgumentFunction Wfts . RParen
    (35) Wfts -> Wfts . Wft
    (1) Wft -> . AtomicWft
    (2) Wft -> . Y_WftNode
    (3) Wft -> . LParen Function Arguments RParen
    (4) Wft -> . LParen BinaryOp Argument Argument RParen
    (5) Wft -> . LParen NaryOp Wfts RParen
    (6) Wft -> . LParen Param2Op Wft Wfts RParen
    (7) Wft -> . LParen Param1Op Wft Wfts RParen
    (8) Wft -> . LParen Y_Close AtomicNameSet Wft RParen
    (9) Wft -> . LParen Y_Every AtomicName Wfts RParen
    (10) Wft -> . LParen SomeCondition Wfts RParen
    (11) Wft -> . LParen Y_QIdentifier Wfts RParen
    (25) AtomicWft -> . AtomicName
    (26) AtomicWft -> . Y_String
    (27) AtomicWft -> . Y_Integer
    (61) Y_WftNode -> . WftNode
    (28) AtomicName -> . Y_Identifier
    (43) Y_String -> . String
    (44) Y_Integer -> . Integer
    (63) Y_Identifier -> . Identifier

    RParen          shift and go to state 100
    LParen          shift and go to state 4
    WftNode         shift and go to state 8
    String          shift and go to state 10
    Integer         shift and go to state 11
    Identifier      shift and go to state 12

    Wft                            shift and go to state 77
    AtomicWft                      shift and go to state 2
    Y_WftNode                      shift and go to state 3
    AtomicName                     shift and go to state 5
    Y_String                       shift and go to state 6
    Y_Integer                      shift and go to state 7
    Y_Identifier                   shift and go to state 9

state 89

    (4) Wft -> LParen BinaryOp Argument Argument RParen .

    $end            reduce using rule 4 (Wft -> LParen BinaryOp Argument Argument RParen .)
    None            reduce using rule 4 (Wft -> LParen BinaryOp Argument Argument RParen .)
    LParen          reduce using rule 4 (Wft -> LParen BinaryOp Argument Argument RParen .)
    WftNode         reduce using rule 4 (Wft -> LParen BinaryOp Argument Argument RParen .)
    String          reduce using rule 4 (Wft -> LParen BinaryOp Argument Argument RParen .)
    Integer         reduce using rule 4 (Wft -> LParen BinaryOp Argument Argument RParen .)
    Identifier      reduce using rule 4 (Wft -> LParen BinaryOp Argument Argument RParen .)
    RParen          reduce using rule 4 (Wft -> LParen BinaryOp Argument Argument RParen .)


state 90

    (6) Wft -> LParen Param2Op Wft Wfts RParen .

    $end            reduce using rule 6 (Wft -> LParen Param2Op Wft Wfts RParen .)
    None            reduce using rule 6 (Wft -> LParen Param2Op Wft Wfts RParen .)
    LParen          reduce using rule 6 (Wft -> LParen Param2Op Wft Wfts RParen .)
    WftNode         reduce using rule 6 (Wft -> LParen Param2Op Wft Wfts RParen .)
    String          reduce using rule 6 (Wft -> LParen Param2Op Wft Wfts RParen .)
    Integer         reduce using rule 6 (Wft -> LParen Param2Op Wft Wfts RParen .)
    Identifier      reduce using rule 6 (Wft -> LParen Param2Op Wft Wfts RParen .)
    RParen          reduce using rule 6 (Wft -> LParen Param2Op Wft Wfts RParen .)


state 91

    (7) Wft -> LParen Param1Op Wft Wfts RParen .

    $end            reduce using rule 7 (Wft -> LParen Param1Op Wft Wfts RParen .)
    None            reduce using rule 7 (Wft -> LParen Param1Op Wft Wfts RParen .)
    LParen          reduce using rule 7 (Wft -> LParen Param1Op Wft Wfts RParen .)
    WftNode         reduce using rule 7 (Wft -> LParen Param1Op Wft Wfts RParen .)
    String          reduce using rule 7 (Wft -> LParen Param1Op Wft Wfts RParen .)
    Integer         reduce using rule 7 (Wft -> LParen Param1Op Wft Wfts RParen .)
    Identifier      reduce using rule 7 (Wft -> LParen Param1Op Wft Wfts RParen .)
    RParen          reduce using rule 7 (Wft -> LParen Param1Op Wft Wfts RParen .)


state 92

    (41) AtomicNames -> AtomicName . AtomicNames
    (40) AtomicNames -> .
    (41) AtomicNames -> . AtomicName AtomicNames
    (28) AtomicName -> . Y_Identifier
    (63) Y_Identifier -> . Identifier

    RParen          reduce using rule 40 (AtomicNames -> .)
    Identifier      shift and go to state 12

    AtomicName                     shift and go to state 92
    AtomicNames                    shift and go to state 101
    Y_Identifier                   shift and go to state 9

state 93

    (39) AtomicNameSet -> LParen AtomicName AtomicNames . RParen

    RParen          shift and go to state 102


state 94

    (8) Wft -> LParen Y_Close AtomicNameSet Wft RParen .

    $end            reduce using rule 8 (Wft -> LParen Y_Close AtomicNameSet Wft RParen .)
    None            reduce using rule 8 (Wft -> LParen Y_Close AtomicNameSet Wft RParen .)
    LParen          reduce using rule 8 (Wft -> LParen Y_Close AtomicNameSet Wft RParen .)
    WftNode         reduce using rule 8 (Wft -> LParen Y_Close AtomicNameSet Wft RParen .)
    String          reduce using rule 8 (Wft -> LParen Y_Close AtomicNameSet Wft RParen .)
    Integer         reduce using rule 8 (Wft -> LParen Y_Close AtomicNameSet Wft RParen .)
    Identifier      reduce using rule 8 (Wft -> LParen Y_Close AtomicNameSet Wft RParen .)
    RParen          reduce using rule 8 (Wft -> LParen Y_Close AtomicNameSet Wft RParen .)


state 95

    (9) Wft -> LParen Y_Every AtomicName Wfts RParen .

    $end            reduce using rule 9 (Wft -> LParen Y_Every AtomicName Wfts RParen .)
    None            reduce using rule 9 (Wft -> LParen Y_Every AtomicName Wfts RParen .)
    LParen          reduce using rule 9 (Wft -> LParen Y_Every AtomicName Wfts RParen .)
    WftNode         reduce using rule 9 (Wft -> LParen Y_Every AtomicName Wfts RParen .)
    String          reduce using rule 9 (Wft -> LParen Y_Every AtomicName Wfts RParen .)
    Integer         reduce using rule 9 (Wft -> LParen Y_Every AtomicName Wfts RParen .)
    Identifier      reduce using rule 9 (Wft -> LParen Y_Every AtomicName Wfts RParen .)
    RParen          reduce using rule 9 (Wft -> LParen Y_Every AtomicName Wfts RParen .)


state 96

    (22) Param2Op -> Y_AndOr LParen Y_Integer Y_Integer . RParen

    RParen          shift and go to state 103


state 97

    (23) Param2Op -> Y_Thresh LParen Y_Integer Y_Integer . RParen

    RParen          shift and go to state 104


state 98

    (24) Param1Op -> Y_Thresh LParen Y_Integer RParen .

    LParen          reduce using rule 24 (Param1Op -> Y_Thresh LParen Y_Integer RParen .)
    WftNode         reduce using rule 24 (Param1Op -> Y_Thresh LParen Y_Integer RParen .)
    String          reduce using rule 24 (Param1Op -> Y_Thresh LParen Y_Integer RParen .)
    Integer         reduce using rule 24 (Param1Op -> Y_Thresh LParen Y_Integer RParen .)
    Identifier      reduce using rule 24 (Param1Op -> Y_Thresh LParen Y_Integer RParen .)


state 99

    (42) SomeCondition -> Y_Some AtomicName LParen Wfts . RParen
    (35) Wfts -> Wfts . Wft
    (1) Wft -> . AtomicWft
    (2) Wft -> . Y_WftNode
    (3) Wft -> . LParen Function Arguments RParen
    (4) Wft -> . LParen BinaryOp Argument Argument RParen
    (5) Wft -> . LParen NaryOp Wfts RParen
    (6) Wft -> . LParen Param2Op Wft Wfts RParen
    (7) Wft -> . LParen Param1Op Wft Wfts RParen
    (8) Wft -> . LParen Y_Close AtomicNameSet Wft RParen
    (9) Wft -> . LParen Y_Every AtomicName Wfts RParen
    (10) Wft -> . LParen SomeCondition Wfts RParen
    (11) Wft -> . LParen Y_QIdentifier Wfts RParen
    (25) AtomicWft -> . AtomicName
    (26) AtomicWft -> . Y_String
    (27) AtomicWft -> . Y_Integer
    (61) Y_WftNode -> . WftNode
    (28) AtomicName -> . Y_Identifier
    (43) Y_String -> . String
    (44) Y_Integer -> . Integer
    (63) Y_Identifier -> . Identifier

    RParen          shift and go to state 105
    LParen          shift and go to state 4
    WftNode         shift and go to state 8
    String          shift and go to state 10
    Integer         shift and go to state 11
    Identifier      shift and go to state 12

    AtomicName                     shift and go to state 5
    Wft                            shift and go to state 77
    AtomicWft                      shift and go to state 2
    Y_WftNode                      shift and go to state 3
    Y_String                       shift and go to state 6
    Y_Integer                      shift and go to state 7
    Y_Identifier                   shift and go to state 9

state 100

    (32) Argument -> LParen ArgumentFunction Wfts RParen .

    RParen          reduce using rule 32 (Argument -> LParen ArgumentFunction Wfts RParen .)
    None            reduce using rule 32 (Argument -> LParen ArgumentFunction Wfts RParen .)
    LParen          reduce using rule 32 (Argument -> LParen ArgumentFunction Wfts RParen .)
    WftNode         reduce using rule 32 (Argument -> LParen ArgumentFunction Wfts RParen .)
    String          reduce using rule 32 (Argument -> LParen ArgumentFunction Wfts RParen .)
    Integer         reduce using rule 32 (Argument -> LParen ArgumentFunction Wfts RParen .)
    Identifier      reduce using rule 32 (Argument -> LParen ArgumentFunction Wfts RParen .)


state 101

    (41) AtomicNames -> AtomicName AtomicNames .

    RParen          reduce using rule 41 (AtomicNames -> AtomicName AtomicNames .)


state 102

    (39) AtomicNameSet -> LParen AtomicName AtomicNames RParen .

    LParen          reduce using rule 39 (AtomicNameSet -> LParen AtomicName AtomicNames RParen .)
    WftNode         reduce using rule 39 (AtomicNameSet -> LParen AtomicName AtomicNames RParen .)
    String          reduce using rule 39 (AtomicNameSet -> LParen AtomicName AtomicNames RParen .)
    Integer         reduce using rule 39 (AtomicNameSet -> LParen AtomicName AtomicNames RParen .)
    Identifier      reduce using rule 39 (AtomicNameSet -> LParen AtomicName AtomicNames RParen .)


state 103

    (22) Param2Op -> Y_AndOr LParen Y_Integer Y_Integer RParen .

    LParen          reduce using rule 22 (Param2Op -> Y_AndOr LParen Y_Integer Y_Integer RParen .)
    WftNode         reduce using rule 22 (Param2Op -> Y_AndOr LParen Y_Integer Y_Integer RParen .)
    String          reduce using rule 22 (Param2Op -> Y_AndOr LParen Y_Integer Y_Integer RParen .)
    Integer         reduce using rule 22 (Param2Op -> Y_AndOr LParen Y_Integer Y_Integer RParen .)
    Identifier      reduce using rule 22 (Param2Op -> Y_AndOr LParen Y_Integer Y_Integer RParen .)


state 104

    (23) Param2Op -> Y_Thresh LParen Y_Integer Y_Integer RParen .

    LParen          reduce using rule 23 (Param2Op -> Y_Thresh LParen Y_Integer Y_Integer RParen .)
    WftNode         reduce using rule 23 (Param2Op -> Y_Thresh LParen Y_Integer Y_Integer RParen .)
    String          reduce using rule 23 (Param2Op -> Y_Thresh LParen Y_Integer Y_Integer RParen .)
    Integer         reduce using rule 23 (Param2Op -> Y_Thresh LParen Y_Integer Y_Integer RParen .)
    Identifier      reduce using rule 23 (Param2Op -> Y_Thresh LParen Y_Integer Y_Integer RParen .)


state 105

    (42) SomeCondition -> Y_Some AtomicName LParen Wfts RParen .

    RParen          reduce using rule 42 (SomeCondition -> Y_Some AtomicName LParen Wfts RParen .)
    LParen          reduce using rule 42 (SomeCondition -> Y_Some AtomicName LParen Wfts RParen .)
    WftNode         reduce using rule 42 (SomeCondition -> Y_Some AtomicName LParen Wfts RParen .)
    String          reduce using rule 42 (SomeCondition -> Y_Some AtomicName LParen Wfts RParen .)
    Integer         reduce using rule 42 (SomeCondition -> Y_Some AtomicName LParen Wfts RParen .)
    Identifier      reduce using rule 42 (SomeCondition -> Y_Some AtomicName LParen Wfts RParen .)

