
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'And AndOr Close DoubImpl Every Identifier Impl Integer LParen Nand None Nor Not Or QIdentifier RParen SetOf Some String Thnor Thnot Thresh WftNode Xor\n    Wft :               AtomicWft\n        |               Y_WftNode\n    \n    Wft  :               LParen Function Arguments RParen\n    \n    Wft  :              LParen BinaryOp Argument Argument RParen\n    \n    Wft :               LParen NaryOp Wfts RParen\n    \n    Wft :               LParen Param2Op Wft Wfts RParen\n        |               LParen Param1Op Wft Wfts RParen\n    \n    Wft :               LParen Y_Close AtomicNameSet Wft RParen\n    \n    Wft :               LParen Y_Every AtomicName Wfts RParen\n    \n    Wft :               LParen SomeCondition Wfts RParen\n        |               LParen QIdentifier Wfts RParen\n    \n    BinaryOp :          Y_Impl\n    \n    NaryOp :            Y_And\n          |             Y_Or\n          |             Y_Not\n          |             Y_Nor\n          |             Y_Thnot\n          |             Y_Thnor\n          |             Y_Nand\n          |             Y_Xor\n          |             Y_DoubImpl\n    \n    Param2Op :          Y_AndOr LParen Y_Integer Y_Integer RParen\n            |           Y_Thresh LParen Y_Integer Y_Integer RParen\n    \n    Param1Op :          Y_Thresh LParen Y_Integer RParen\n    \n    AtomicWft :         AtomicName\n             |          Y_String\n             |          Y_Integer\n    \n    AtomicName  :        Y_Identifier\n    \n    Function :          Wft\n    \n    Argument :          Wft\n            |           None\n            |           LParen ArgumentFunction Wfts RParen\n    \n    ArgumentFunction :  Y_SetOf\n    \n    Wfts :\n        |               Wfts Wft\n    \n    Arguments :         Argument\n        |               Arguments Argument\n    \n    AtomicNameSet :     AtomicName\n        |               LParen AtomicName AtomicNames RParen\n    \n    AtomicNames :\n        |               AtomicName AtomicNames\n    \n    SomeCondition :     Y_Some AtomicName LParen Wfts RParen\n    Y_String : StringY_Integer : IntegerY_Impl : ImplY_Or : OrY_Not : NotY_Nor : NorY_Thnot : ThnotY_Thnor : ThnorY_Nand : NandY_Xor : XorY_DoubImpl : DoubImplY_AndOr : AndOrY_Thresh : ThreshY_SetOf : SetOfY_Every : EveryY_Some : SomeY_Close : CloseY_And : AndY_WftNode : WftNodeY_QIdentifier : QIdentifierY_Identifier : Identifier'
    
_lr_action_items = {'LParen':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,61,62,63,64,65,68,69,70,71,72,73,75,76,77,78,81,82,83,86,87,88,89,90,93,94,97,98,99,101,102,103,104,],[4,-1,-2,4,-25,-26,-27,-61,-28,-43,-44,-63,51,51,-34,4,-29,4,60,-34,-34,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,66,67,-59,-45,-60,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,4,51,-36,-30,-31,51,4,-34,-34,4,-38,-34,4,4,86,-34,-33,-56,-3,-37,-5,-35,4,4,4,-10,-11,-34,4,-4,-6,-7,-8,-9,-24,4,-32,-39,-22,-23,-42,]),'WftNode':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,30,31,32,38,39,40,41,42,43,44,45,46,47,51,52,53,54,55,56,57,58,59,61,62,63,64,65,69,70,71,72,73,75,76,77,78,81,82,83,86,87,88,89,90,93,94,97,98,99,101,102,103,104,],[8,-1,-2,8,-25,-26,-27,-61,-28,-43,-44,-63,8,8,-34,8,-29,8,-34,-34,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-45,-60,-46,-47,-48,-49,-50,-51,-52,-53,8,8,-36,-30,-31,8,8,-34,-34,8,-38,-34,8,8,-34,-33,-56,-3,-37,-5,-35,8,8,8,-10,-11,-34,8,-4,-6,-7,-8,-9,-24,8,-32,-39,-22,-23,-42,]),'String':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,30,31,32,38,39,40,41,42,43,44,45,46,47,51,52,53,54,55,56,57,58,59,61,62,63,64,65,69,70,71,72,73,75,76,77,78,81,82,83,86,87,88,89,90,93,94,97,98,99,101,102,103,104,],[10,-1,-2,10,-25,-26,-27,-61,-28,-43,-44,-63,10,10,-34,10,-29,10,-34,-34,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-45,-60,-46,-47,-48,-49,-50,-51,-52,-53,10,10,-36,-30,-31,10,10,-34,-34,10,-38,-34,10,10,-34,-33,-56,-3,-37,-5,-35,10,10,10,-10,-11,-34,10,-4,-6,-7,-8,-9,-24,10,-32,-39,-22,-23,-42,]),'Integer':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,30,31,32,38,39,40,41,42,43,44,45,46,47,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,69,70,71,72,73,75,76,77,78,81,82,83,84,85,86,87,88,89,90,93,94,97,98,99,101,102,103,104,],[11,-1,-2,11,-25,-26,-27,-61,-28,-43,-44,-63,11,11,-34,11,-29,11,-34,-34,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-45,-60,-46,-47,-48,-49,-50,-51,-52,-53,11,11,-36,-30,-31,11,11,-34,-34,11,-38,-34,11,11,11,11,-34,-33,-56,-3,-37,-5,-35,11,11,11,-10,-11,11,11,-34,11,-4,-6,-7,-8,-9,-24,11,-32,-39,-22,-23,-42,]),'Identifier':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,70,71,72,73,75,76,77,78,79,81,82,83,86,87,88,89,90,91,93,94,97,98,99,101,102,103,104,],[12,-1,-2,12,-25,-26,-27,-61,-28,-43,-44,-63,12,12,-34,12,-29,12,12,12,-34,-34,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-59,-57,12,-45,-60,-46,-47,-48,-49,-50,-51,-52,-53,-58,12,12,-36,-30,-31,12,12,-34,-34,12,12,-38,-34,12,12,-34,-33,-56,-3,-37,-5,-35,12,12,12,12,-10,-11,-34,12,-4,-6,-7,12,-8,-9,-24,12,-32,-39,-22,-23,-42,]),'$end':([1,2,3,5,6,7,8,9,10,11,12,72,75,82,83,88,89,90,93,94,],[0,-1,-2,-25,-26,-27,-61,-28,-43,-44,-63,-3,-5,-10,-11,-4,-6,-7,-8,-9,]),'None':([2,3,5,6,7,8,9,10,11,12,13,14,17,23,38,52,53,54,55,56,72,73,75,82,83,88,89,90,93,94,99,],[-1,-2,-25,-26,-27,-61,-28,-43,-44,-63,55,55,-29,-12,-45,55,-36,-30,-31,55,-3,-37,-5,-10,-11,-4,-6,-7,-8,-9,-32,]),'RParen':([2,3,5,6,7,8,9,10,11,12,15,21,22,24,25,26,27,28,29,30,31,32,39,40,41,42,43,44,45,46,47,52,53,54,55,57,58,59,63,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,104,],[-1,-2,-25,-26,-27,-61,-28,-43,-44,-63,-34,-34,-34,-13,-14,-15,-16,-17,-18,-19,-20,-21,-60,-46,-47,-48,-49,-50,-51,-52,-53,72,-36,-30,-31,75,-34,-34,-34,82,83,-34,-33,-56,-3,-37,88,-5,-35,89,90,-40,93,94,-10,-11,97,-34,99,-4,-6,-7,-40,101,-8,-9,102,103,104,-32,-41,-42,]),'QIdentifier':([4,51,],[22,22,]),'Close':([4,51,],[35,35,]),'Every':([4,51,],[36,36,]),'Impl':([4,51,],[38,38,]),'And':([4,51,],[39,39,]),'Or':([4,51,],[40,40,]),'Not':([4,51,],[41,41,]),'Nor':([4,51,],[42,42,]),'Thnot':([4,51,],[43,43,]),'Thnor':([4,51,],[44,44,]),'Nand':([4,51,],[45,45,]),'Xor':([4,51,],[46,46,]),'DoubImpl':([4,51,],[47,47,]),'AndOr':([4,51,],[48,48,]),'Thresh':([4,51,],[49,49,]),'Some':([4,51,],[50,50,]),'SetOf':([51,],[71,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Wft':([0,4,13,14,16,18,51,52,56,57,61,64,65,77,78,81,87,98,],[1,17,54,54,58,59,17,54,54,76,80,76,76,76,76,76,76,76,]),'AtomicWft':([0,4,13,14,16,18,51,52,56,57,61,64,65,77,78,81,87,98,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'Y_WftNode':([0,4,13,14,16,18,51,52,56,57,61,64,65,77,78,81,87,98,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'AtomicName':([0,4,13,14,16,18,19,20,37,51,52,56,57,60,61,64,65,77,78,79,81,87,91,98,],[5,5,5,5,5,5,62,63,68,5,5,5,5,79,5,5,5,5,5,91,5,5,91,5,]),'Y_String':([0,4,13,14,16,18,51,52,56,57,61,64,65,77,78,81,87,98,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'Y_Integer':([0,4,13,14,16,18,51,52,56,57,61,64,65,66,67,77,78,81,84,85,87,98,],[7,7,7,7,7,7,7,7,7,7,7,7,7,84,85,7,7,7,95,96,7,7,]),'Y_Identifier':([0,4,13,14,16,18,19,20,37,51,52,56,57,60,61,64,65,77,78,79,81,87,91,98,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'Function':([4,51,],[13,13,]),'BinaryOp':([4,51,],[14,14,]),'NaryOp':([4,51,],[15,15,]),'Param2Op':([4,51,],[16,16,]),'Param1Op':([4,51,],[18,18,]),'Y_Close':([4,51,],[19,19,]),'Y_Every':([4,51,],[20,20,]),'SomeCondition':([4,51,],[21,21,]),'Y_Impl':([4,51,],[23,23,]),'Y_And':([4,51,],[24,24,]),'Y_Or':([4,51,],[25,25,]),'Y_Not':([4,51,],[26,26,]),'Y_Nor':([4,51,],[27,27,]),'Y_Thnot':([4,51,],[28,28,]),'Y_Thnor':([4,51,],[29,29,]),'Y_Nand':([4,51,],[30,30,]),'Y_Xor':([4,51,],[31,31,]),'Y_DoubImpl':([4,51,],[32,32,]),'Y_AndOr':([4,51,],[33,33,]),'Y_Thresh':([4,51,],[34,34,]),'Y_Some':([4,51,],[37,37,]),'Arguments':([13,],[52,]),'Argument':([13,14,52,56,],[53,56,73,74,]),'Wfts':([15,21,22,58,59,63,69,86,],[57,64,65,77,78,81,87,98,]),'AtomicNameSet':([19,],[61,]),'ArgumentFunction':([51,],[69,]),'Y_SetOf':([51,],[70,]),'AtomicNames':([79,91,],[92,100,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Wft","S'",1,None,None,None),
  ('Wft -> AtomicWft','Wft',1,'p_Wft1','langaparse.py',38),
  ('Wft -> Y_WftNode','Wft',1,'p_Wft1','langaparse.py',39),
  ('Wft -> LParen Function Arguments RParen','Wft',4,'p_Wft2','langaparse.py',47),
  ('Wft -> LParen BinaryOp Argument Argument RParen','Wft',5,'p_Wft3','langaparse.py',55),
  ('Wft -> LParen NaryOp Wfts RParen','Wft',4,'p_Wft4','langaparse.py',63),
  ('Wft -> LParen Param2Op Wft Wfts RParen','Wft',5,'p_Wft5','langaparse.py',71),
  ('Wft -> LParen Param1Op Wft Wfts RParen','Wft',5,'p_Wft5','langaparse.py',72),
  ('Wft -> LParen Y_Close AtomicNameSet Wft RParen','Wft',5,'p_Wft6','langaparse.py',80),
  ('Wft -> LParen Y_Every AtomicName Wfts RParen','Wft',5,'p_Wft7','langaparse.py',88),
  ('Wft -> LParen SomeCondition Wfts RParen','Wft',4,'p_Wft8','langaparse.py',96),
  ('Wft -> LParen QIdentifier Wfts RParen','Wft',4,'p_Wft8','langaparse.py',97),
  ('BinaryOp -> Y_Impl','BinaryOp',1,'p_BinaryOp','langaparse.py',105),
  ('NaryOp -> Y_And','NaryOp',1,'p_NaryOp','langaparse.py',111),
  ('NaryOp -> Y_Or','NaryOp',1,'p_NaryOp','langaparse.py',112),
  ('NaryOp -> Y_Not','NaryOp',1,'p_NaryOp','langaparse.py',113),
  ('NaryOp -> Y_Nor','NaryOp',1,'p_NaryOp','langaparse.py',114),
  ('NaryOp -> Y_Thnot','NaryOp',1,'p_NaryOp','langaparse.py',115),
  ('NaryOp -> Y_Thnor','NaryOp',1,'p_NaryOp','langaparse.py',116),
  ('NaryOp -> Y_Nand','NaryOp',1,'p_NaryOp','langaparse.py',117),
  ('NaryOp -> Y_Xor','NaryOp',1,'p_NaryOp','langaparse.py',118),
  ('NaryOp -> Y_DoubImpl','NaryOp',1,'p_NaryOp','langaparse.py',119),
  ('Param2Op -> Y_AndOr LParen Y_Integer Y_Integer RParen','Param2Op',5,'p_Param2Op','langaparse.py',125),
  ('Param2Op -> Y_Thresh LParen Y_Integer Y_Integer RParen','Param2Op',5,'p_Param2Op','langaparse.py',126),
  ('Param1Op -> Y_Thresh LParen Y_Integer RParen','Param1Op',4,'p_Param1Op','langaparse.py',133),
  ('AtomicWft -> AtomicName','AtomicWft',1,'p_AtomicWft','langaparse.py',140),
  ('AtomicWft -> Y_String','AtomicWft',1,'p_AtomicWft','langaparse.py',141),
  ('AtomicWft -> Y_Integer','AtomicWft',1,'p_AtomicWft','langaparse.py',142),
  ('AtomicName -> Y_Identifier','AtomicName',1,'p_AtomicName','langaparse.py',148),
  ('Function -> Wft','Function',1,'p_Function','langaparse.py',155),
  ('Argument -> Wft','Argument',1,'p_Argument','langaparse.py',162),
  ('Argument -> None','Argument',1,'p_Argument','langaparse.py',163),
  ('Argument -> LParen ArgumentFunction Wfts RParen','Argument',4,'p_Argument','langaparse.py',164),
  ('ArgumentFunction -> Y_SetOf','ArgumentFunction',1,'p_ArgumentFunction','langaparse.py',175),
  ('Wfts -> <empty>','Wfts',0,'p_Wfts','langaparse.py',181),
  ('Wfts -> Wfts Wft','Wfts',2,'p_Wfts','langaparse.py',182),
  ('Arguments -> Argument','Arguments',1,'p_Arguments','langaparse.py',191),
  ('Arguments -> Arguments Argument','Arguments',2,'p_Arguments','langaparse.py',192),
  ('AtomicNameSet -> AtomicName','AtomicNameSet',1,'p_AtomicNameSet','langaparse.py',201),
  ('AtomicNameSet -> LParen AtomicName AtomicNames RParen','AtomicNameSet',4,'p_AtomicNameSet','langaparse.py',202),
  ('AtomicNames -> <empty>','AtomicNames',0,'p_AtomicNames','langaparse.py',212),
  ('AtomicNames -> AtomicName AtomicNames','AtomicNames',2,'p_AtomicNames','langaparse.py',213),
  ('SomeCondition -> Y_Some AtomicName LParen Wfts RParen','SomeCondition',5,'p_SomeCondition','langaparse.py',222),
  ('Y_String -> String','Y_String',1,'p_Y_String','langaparse.py',228),
  ('Y_Integer -> Integer','Y_Integer',1,'p_Y_Integer','langaparse.py',232),
  ('Y_Impl -> Impl','Y_Impl',1,'p_Y_Impl','langaparse.py',236),
  ('Y_Or -> Or','Y_Or',1,'p_Y_Or','langaparse.py',240),
  ('Y_Not -> Not','Y_Not',1,'p_Y_Not','langaparse.py',244),
  ('Y_Nor -> Nor','Y_Nor',1,'p_Y_Nor','langaparse.py',248),
  ('Y_Thnot -> Thnot','Y_Thnot',1,'p_Y_Thnot','langaparse.py',252),
  ('Y_Thnor -> Thnor','Y_Thnor',1,'p_Y_Thnor','langaparse.py',256),
  ('Y_Nand -> Nand','Y_Nand',1,'p_Y_Nand','langaparse.py',260),
  ('Y_Xor -> Xor','Y_Xor',1,'p_Y_Xor','langaparse.py',264),
  ('Y_DoubImpl -> DoubImpl','Y_DoubImpl',1,'p_Y_DoubImpl','langaparse.py',268),
  ('Y_AndOr -> AndOr','Y_AndOr',1,'p_Y_AndOr','langaparse.py',272),
  ('Y_Thresh -> Thresh','Y_Thresh',1,'p_Y_Thresh','langaparse.py',276),
  ('Y_SetOf -> SetOf','Y_SetOf',1,'p_Y_SetOf','langaparse.py',280),
  ('Y_Every -> Every','Y_Every',1,'p_Y_Every','langaparse.py',284),
  ('Y_Some -> Some','Y_Some',1,'p_Y_Some','langaparse.py',288),
  ('Y_Close -> Close','Y_Close',1,'p_Y_Close','langaparse.py',292),
  ('Y_And -> And','Y_And',1,'p_Y_And','langaparse.py',296),
  ('Y_WftNode -> WftNode','Y_WftNode',1,'p_Y_WftNode','langaparse.py',300),
  ('Y_QIdentifier -> QIdentifier','Y_QIdentifier',1,'p_Y_QIdentifier','langaparse.py',304),
  ('Y_Identifier -> Identifier','Y_Identifier',1,'p_Y_Identifier','langaparse.py',308),
]
